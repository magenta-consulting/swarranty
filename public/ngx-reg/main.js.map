{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.scss","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/app/components/send-email/send-email.component.html","webpack:///./src/app/components/send-email/send-email.component.scss","webpack:///./src/app/components/send-email/send-email.component.ts","webpack:///./src/app/components/success/success.component.html","webpack:///./src/app/components/success/success.component.scss","webpack:///./src/app/components/success/success.component.ts","webpack:///./src/app/components/survey/survey.component.html","webpack:///./src/app/components/survey/survey.component.scss","webpack:///./src/app/components/survey/survey.component.ts","webpack:///./src/app/components/uploads/uploads.component.html","webpack:///./src/app/components/uploads/uploads.component.scss","webpack:///./src/app/components/uploads/uploads.component.ts","webpack:///./src/app/directive/focus.directive.ts","webpack:///./src/app/extensions/angular2-image-upload/index.js","webpack:///./src/app/extensions/angular2-image-upload/lib/file-drop.directive.js","webpack:///./src/app/extensions/angular2-image-upload/lib/image-upload.module.js","webpack:///./src/app/extensions/angular2-image-upload/lib/image-upload/image-upload.component.js","webpack:///./src/app/extensions/angular2-image-upload/lib/image-upload/image.service.js","webpack:///./src/app/helper/helper.ts","webpack:///./src/app/model/registration.ts","webpack:///./src/app/model/survey.ts","webpack:///./src/app/model/warranty.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/customer.service.ts","webpack:///./src/app/service/newsletter-subscription.service.ts","webpack:///./src/app/service/organisation.service.ts","webpack:///./src/app/service/product.service.ts","webpack:///./src/app/service/registration.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA,gDAAgD,WAAW;AAC3D;AACA,gBAAgB,qBAAqB;AACrC,kBAAkB,sBAAsB;AACxC,kBAAkB,sBAAsB;AACxC,gBAAgB,yDAAyD;AACzE,qBAAqB,8DAA8D;AACnF,oBAAoB,6DAA6D;AACjF;AACA;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA,gDAAgD,WAAW;AAC3D;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,YAAY;AACZ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gCAAgC;AAC7E,gDAAgD,sCAAsC;AACtF;AACA;AACA;AACA;AACA;AACA,2GAA2G,uBAAuB,EAAE;AACpI;AACA;AACA;AACA,yCAAyC,8BAA8B,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,4CAA4C;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA,gDAAgD,+CAA+C,EAAE;AACjG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,sPAAsP,gCAAgC,8RAA8R,4BAA4B,4hCAA4hC,0CAA0C,8PAA8P,4BAA4B;AACh7D,yCAAyC,+BAA+B,+BAA+B,oCAAoC,8CAA8C,qCAAqC,kCAAkC,6BAA6B,yBAAyB,OAAO,8BAA8B,4CAA4C,OAAO,uCAAuC,sBAAsB,wBAAwB,yBAAyB,OAAO,6BAA6B,4BAA4B,OAAO,8BAA8B,oCAAoC,2BAA2B,4BAA4B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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\n// import component\nimport {RegistrationComponent} from \"./components/registration/registration.component\";\nimport {UploadsComponent} from \"./components/uploads/uploads.component\";\nimport {SendEmailComponent} from \"./components/send-email/send-email.component\";\nimport {SuccessComponent} from \"./components/success/success.component\";\nimport {AppComponent} from './app.component';\n\n// import services\nimport { AuthGuard } from './service/auth-guard.service';\nimport { SurveyComponent } from './components/survey/survey.component';\n\nconst routes: Routes = [\n    // { path: '', component:  AppComponent},\n    { path: '', redirectTo: '/registration', pathMatch: 'full' },\n    { path: 'registration', component: RegistrationComponent, canActivate: [ AuthGuard ] },\n    { path: 'survey', component: SurveyComponent },\n    { path: 'upload-receipt-image/:id', component: UploadsComponent },\n    { path: 'send-email/:id', component: SendEmailComponent },\n    { path: 'success/:id', component: SuccessComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    declarations: []\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \"<div class=\\\"text-center\\\">\\n  <img class=\\\"logo\\\" src=\\\"{{logoSrc}}\\\">\\n</div>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<!--<h2 *ngFor=\\\"let item of data; index as i; first as isFirst\\\">-->\\n  <!--{{item}} - <span *ngIf=\\\"isFirst\\\">default</span>-->\\n<!--</h2>-->\\n<!--<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"addData()\\\">Add Item</button>-->\\n\"","module.exports = \".logo {\\n  max-height: 120px;\\n  width: auto;\\n  margin-bottom: 30px; }\\n\"","import {Component, ElementRef} from '@angular/core';\nimport {OrganisationService} from \"./service/organisation.service\";\nimport { Router }    from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'app';\n    data = ['item 1', 'item 2', 'item 3'];\n    logoSrc = null;\n\n    constructor(private eRef: ElementRef, \n        private organisationService: OrganisationService,\n        public router: Router) {\n        const native = eRef.nativeElement;\n        const orgId = native.getAttribute('organisation');\n        localStorage.setItem('orgId', orgId);\n        organisationService.getLogo().subscribe(logoSrc => this.logoSrc = logoSrc);\n    }\n\n    addData(): void {\n        this.data.push('new data');\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { FocusDirective } from './directive/focus.directive';\n\n// import components\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {UploadsComponent} from \"./components/uploads/uploads.component\";\nimport {SendEmailComponent} from \"./components/send-email/send-email.component\";\nimport {SuccessComponent} from \"./components/success/success.component\";\n\n// import services\nimport { AuthGuard } from './service/auth-guard.service';\nimport { Ng2CompleterModule } from \"ng2-completer\";\n\n// import libs\nimport { ImageUploadModule } from \"./extensions/angular2-image-upload\";\nimport {Helper} from \"./helper/helper\";\nimport { AgmCoreModule } from '@agm/core';\nimport { SurveyComponent } from './components/survey/survey.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    FocusDirective,\n    UploadsComponent,\n    SendEmailComponent,\n    SuccessComponent,\n    SurveyComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AngularFontAwesomeModule,\n\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n\n    // import libs\n    ImageUploadModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyAN6XsSJRAUI4Iuj0Q3OdziE1D0Sou_b_c\",\n      libraries: [\"places\"]\n    }),\n    Ng2CompleterModule,\n\n    AppRoutingModule\n\n  ],\n  providers: [AuthGuard, Helper],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3 col-lg-4 offset-lg-4\\\">\\n        <div class=\\\"text-center\\\">\\n            <h3>Customer and Product Registration</h3>\\n            <section>\\n                <h5>Customer Details</h5>\\n                <div *ngIf=\\\"!isPreview('customerName')\\\">\\n                    <div class=\\\"input-group mb-2\\\">\\n                        <input [(ngModel)]=\\\"customer.name\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                               placeholder=\\\"(*) Your Full name\\\"\\n                               aria-label=\\\"Your Full name\\\"\\n                               (keyup.enter)=\\\"updateField('customerName')\\\"\\n                               (blur)=\\\"updateField('customerName')\\\">\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"isPreview('customerName')\\\" (click)=\\\"editPreview('customerName')\\\">\\n                    <div class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Full Name </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>{{customer.name}}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"checkingError && (customer.name == null || customer.name == '')\\\" class=\\\"alert alert-danger\\\"\\n                     role=\\\"alert\\\">\\n                    This field is required\\n                </div>\\n                <div *ngIf=\\\"!isPreview('customerTelephone')\\\">\\n                    <div class=\\\"input-group mb-2\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span *ngIf=\\\"!isDialingCodeEditing\\\" (click)=\\\"editDialingCode()\\\" class=\\\"input-group-text\\\">+{{customer.dialingCode}}</span>\\n                            <input #dialingCode [focus]=\\\"focusDialingCodeEM\\\" *ngIf=\\\"isDialingCodeEditing\\\"\\n                                   style=\\\"width: 45px;\\\" type=\\\"number\\\" class=\\\"form-control mr-1\\\" value=\\\"65\\\"\\n                                   aria-label=\\\"Country Dialing Code\\\"\\n                                   (keyup.enter)=\\\"updateDialingCode(dialingCode.value)\\\"\\n                                   (blur)=\\\"updateDialingCode(dialingCode.value)\\\">\\n                        </div>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"customer.telephone\\\" class=\\\"form-control\\\"\\n                               placeholder=\\\"(*) Contact Number\\\"\\n                               aria-label=\\\"Contact Number\\\"\\n                               (keyup.enter)=\\\"updateField('customerTelephone')\\\"\\n                               (blur)=\\\"updateField('customerTelephone')\\\"\\n                               (keypress)=\\\"checkPhone($event)\\\"\\n                        />\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"isPreview('customerTelephone')\\\" (click)=\\\"editPreview('customerTelephone')\\\">\\n                    <div class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Contact Number </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>+{{customer.dialingCode}} {{ customer.telephone }}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"checkingError && (!customer.telephone || customer.telephone.toString().length != 8)\\\"\\n                     class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    <span *ngIf=\\\"!customer.telephone\\\">This field is required</span>\\n                    <span *ngIf=\\\"customer.telephone && customer.telephone.toString().length != 8\\\">Contact number has 8 digits</span>\\n                </div>\\n                <div *ngIf=\\\"!isPreview('emailAddress')\\\" class=\\\"input-group mb-2\\\">\\n                    <input [(ngModel)]=\\\"customer.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\"\\n                           aria-label=\\\"Email Address\\\"\\n                           (keyup.enter)=\\\"updateField('emailAddress')\\\"\\n                           (focus)=\\\"typingEmail=true\\\"\\n                           (blur)=\\\"updateField('emailAddress'); typingEmail=false;\\\"\\n                           (change)=\\\"customer.email = customer.email.trim().toLowerCase()\\\"\\n                    >\\n                </div>\\n                <div *ngIf=\\\"isPreview('emailAddress')\\\" (click)=\\\"editPreview('emailAddress')\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Email Address </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{customer.email}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!isEmailValid() && !typingEmail\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    Email must be valid!\\n                </div>\\n                <div *ngIf=\\\"!isPreview('emailConfirm')\\\" class=\\\"input-group mb-2\\\">\\n                    <input [(ngModel)]=\\\"emailConfirm\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"Confirm Email Address\\\"\\n                           aria-label=\\\"Confirm Email Address\\\"\\n                           (keyup.enter)=\\\"updateField('emailConfirm')\\\"\\n                           (blur)=\\\"updateField('emailConfirm'); typingConfirm=false\\\"\\n                           (focus)=\\\"typingConfirm=true\\\"\\n                           (change)=\\\"emailConfirm = emailConfirm.trim().toLowerCase()\\\"\\n                    >\\n                </div>\\n                <div *ngIf=\\\"isPreview('emailConfirm')\\\" (click)=\\\"editPreview('emailConfirm')\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Confirm Email Address </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{emailConfirm}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"customer.email && emailConfirm != customer.email && !typingConfirm && !typingEmail\\\"\\n                     class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    The Confirmation Email must match your Email!\\n                </div>\\n                <div *ngIf=\\\"!isPreview('homeAddress')\\\" class=\\\"input-group mb-2\\\">\\n                    <input [(ngModel)]=\\\"customer.homeAddress\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"Your Address\\\"\\n                           aria-label=\\\"Your Address\\\"\\n                           (keyup.enter)=\\\"updateField('homeAddress')\\\"\\n                           (blur)=\\\"updateField('homeAddress')\\\"\\n                           autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" #search\\n                           [formControl]=\\\"searchControl\\\"\\n                    >\\n\\n                </div>\\n                <div *ngIf=\\\"isPreview('homeAddress')\\\" (click)=\\\"editPreview('homeAddress')\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Your Address </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{customer.homeAddress}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"isPreview('addressUnitNumber')\\\" (click)=\\\"editPreview('addressUnitNumber')\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Unit/Block/House Number </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{customer.addressUnitNumber}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!isPreview('addressUnitNumber')\\\" class=\\\"input-group mb-2\\\">\\n                    <input [(ngModel)]=\\\"customer.addressUnitNumber\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"Unit/Block/House Number\\\"\\n                           aria-label=\\\"Unit/Block/House Number\\\"\\n                           (keyup.enter)=\\\"updateField('addressUnitNumber')\\\"\\n                           (blur)=\\\"updateField('addressUnitNumber')\\\"\\n                    >\\n                </div>\\n                <div *ngIf=\\\"!isPreview('homePostalCode')\\\" class=\\\"input-group mb-2\\\">\\n                    <input [(ngModel)]=\\\"customer.homePostalCode\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"Postal Code\\\"\\n                           aria-label=\\\"Postal Code\\\"\\n                           (keyup.enter)=\\\"updateField('homePostalCode')\\\"\\n                           (blur)=\\\"updateField('homePostalCode')\\\"\\n                           type=\\\"number\\\"\\n                    >\\n                </div>\\n                <div *ngIf=\\\"isPreview('homePostalCode')\\\" (click)=\\\"editPreview('homePostalCode')\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Postal Code </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{customer.homePostalCode}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n            </section>\\n            <h3>Product Purchase Information</h3>\\n            <section *ngFor=\\\"let warranty of warranties; index as i; first as isFirst\\\">\\n                <div *ngIf=\\\"!isFirst\\\" class=\\\"remove-product mb-2\\\" (click)=\\\"removeWarranty(warranty)\\\">\\n                    <fa size=\\\"lg\\\" name=\\\"minus-square\\\"></fa>\\n                    Remove\\n                </div>\\n                <div *ngIf=\\\"!isPreview('productBrand'+i)\\\">\\n                    <div class=\\\"input-group mb-2\\\">\\n                        <ng-select class=\\\"mb-2\\\" (change)=\\\"selectBrand($event,warranty)\\\" [items]=\\\"warranty.brands\\\"\\n                                   bindLabel=\\\"name\\\"\\n                                   placeholder=\\\"(*) Product Brand\\\"\\n                                   [(ngModel)]=\\\"warranty.selectedBrand\\\"\\n                                   (blur)=\\\"updateField('productBrand'+i)\\\">\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"isPreview('productBrand'+i)\\\" (click)=\\\"editPreview('productBrand'+i)\\\">\\n                    <div class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Product Brand </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>{{warranty.selectedBrand.name}}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"checkingError && warranty.selectedBrand == null\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    This field is required\\n                </div>\\n                <div *ngIf=\\\"!warranty.isCategoryHidden\\\">\\n                    <div *ngIf=\\\"!isPreview('productCategory'+i)\\\" class=\\\"input-group mb-2\\\">\\n                        <ng-select (change)=\\\"selectCategory($event,warranty)\\\" class=\\\"mb-2\\\"\\n                                   [items]=\\\"warranty.categories\\\"\\n                                   bindLabel=\\\"name\\\"\\n                                   placeholder=\\\"(*) Product Category\\\"\\n                                   [(ngModel)]=\\\"warranty.selectedCategory\\\"\\n                                   (blur)=\\\"updateField('productCategory'+i)\\\">\\n                        </ng-select>\\n                    </div>\\n                    <div *ngIf=\\\"isPreview('productCategory'+i)\\\" (click)=\\\"editPreview('productCategory'+i)\\\"\\n                         class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Product Category </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>{{warranty.selectedCategory.name}}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"checkingError && warranty.selectedCategory == null\\\" class=\\\"alert alert-danger\\\"\\n                         role=\\\"alert\\\">\\n                        This field is required\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!warranty.isProductHidden\\\">\\n                    <div *ngIf=\\\"!isPreview('modelName'+i)\\\" class=\\\"input-group mb-2\\\">\\n                        <ng-select class=\\\"mb-2\\\" [items]=\\\"warranty.products\\\"\\n                                   bindLabel=\\\"name\\\"\\n                                   placeholder=\\\"(*) Model Name\\\"\\n                                   [(ngModel)]=\\\"warranty.selectedProduct\\\"\\n                                   (blur)=\\\"updateField('modelName'+i)\\\">\\n                        </ng-select>\\n                    </div>\\n                    <div *ngIf=\\\"isPreview('modelName'+i)\\\" (click)=\\\"editPreview('modelName'+i)\\\"\\n                         class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Model Name </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>{{warranty.selectedProduct.name}}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"checkingError && warranty.selectedProduct == null\\\" class=\\\"alert alert-danger\\\"\\n                         role=\\\"alert\\\">\\n                        This field is required\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!isPreview('purchaseDate'+i)\\\">\\n                    <div class=\\\"input-group mb-2\\\">\\n                        <input [(ngModel)]=\\\"warranty.purchaseDate\\\" type=\\\"text\\\"\\n                               placeholder=\\\"(*) Delivery Date (DD-MM-YYYY)\\\"\\n                               class=\\\"form-control\\\"\\n                               [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY' }\\\"\\n                               (ngModelChange)=\\\"updateField('purchaseDate'+i)\\\"\\n                               bsDatepicker/>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"isPreview('purchaseDate'+i)\\\" (click)=\\\"editPreview('purchaseDate'+i)\\\">\\n                    <div class=\\\"input-group mb-2 preview-container\\\">\\n                        <div class=\\\"input-group-prepend preview-label\\\">\\n                            <span class=\\\"input-group-text\\\">Delivery Date </span>\\n                        </div>\\n                        <div class=\\\"form-control preview-text\\\">\\n                            <span>{{warranty.purchaseDate|date}}</span>\\n                        </div>\\n                        <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"checkingError && warranty.purchaseDate == null\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    This field is required\\n                </div>\\n                <div *ngIf=\\\"!isPreview('productSerialNumber'+i)\\\" class=\\\"input-group mb-1\\\">\\n                    <input [(ngModel)]=\\\"warranty.productSerialNumber\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"(*) Product Serial Number\\\"\\n                           aria-label=\\\"Product Serial Number\\\"\\n                           (keyup.enter)=\\\"updateField('productSerialNumber'+i)\\\"\\n                           (blur)=\\\"updateField('productSerialNumber'+i)\\\">\\n                </div>\\n                <div *ngIf=\\\"!isPreview('productSerialNumber'+i)\\\" class=\\\"input-group mb-2\\\"><a href=\\\"{{organisation.psnLocationUrl}}\\\" target=\\\"_blank\\\">How\\n                    to find the product serial number.</a></div>\\n                <div *ngIf=\\\"isPreview('productSerialNumber'+i)\\\" (click)=\\\"editPreview('productSerialNumber'+i)\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Serial Number </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{warranty.productSerialNumber}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"checkingError && warranty.productSerialNumber == null\\\" class=\\\"alert alert-danger\\\"\\n                     role=\\\"alert\\\">\\n                    This field is required\\n                </div>\\n                <div *ngIf=\\\"!isPreview('dealerName'+i)\\\" class=\\\"input-group mb-2\\\">\\n                    <ng-select class=\\\"mb-2\\\" [items]=\\\"warranty.dealers\\\"\\n                               bindLabel=\\\"name\\\"\\n                               placeholder=\\\"Dealer's Name\\\"\\n                               [(ngModel)]=\\\"warranty.selectedDealer\\\"\\n                               (blur)=\\\"updateField('dealerName'+i)\\\">\\n                    </ng-select>\\n                </div>\\n                <div *ngIf=\\\"isPreview('dealerName'+i)\\\" (click)=\\\"editPreview('dealerName'+i)\\\"\\n                     class=\\\"input-group mb-2 preview-container\\\">\\n                    <div class=\\\"input-group-prepend preview-label\\\">\\n                        <span class=\\\"input-group-text\\\">Dealer's Name </span>\\n                    </div>\\n                    <div class=\\\"form-control preview-text\\\">\\n                        <span>{{warranty.selectedDealer ? warranty.selectedDealer.name : ''}}</span>\\n                    </div>\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\"><fa name=\\\"edit\\\"></fa></span>\\n                    </div>\\n                </div>\\n            </section>\\n            <div *ngIf=\\\"!isFormPreview\\\" class=\\\"input-group mb-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addWarranty()\\\">\\n                <fa size=\\\"lg\\\" name=\\\"plus-square\\\"></fa>\\n                <span class=\\\"add-product-text\\\"> Add another Product</span>\\n            </div>\\n            <section *ngIf=\\\"!isFormPreview\\\" class=\\\"checkboxes\\\">\\n                <div *ngIf=\\\"customer.email\\\" class=\\\"form-check\\\">\\n                    <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\n                           id=\\\"newsletterSubscription\\\" [(ngModel)]=\\\"subscribeNewsletter\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"newsletterSubscription\\\">\\n                        Keep me updated on new {{organisation.name}} product and promotions.\\n                    </label>\\n                </div>\\n                <div class=\\\"form-check\\\">\\n                    <input required=\\\"required\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"isAgreedToTermsAndPolicy\\\"\\n                           aria-label=\\\"Checkbox for following text input\\\" id=\\\"agreeTos\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"agreeTos\\\">\\n                        I have read and agree to the <a (click)=\\\"lgModal.show();getInforModal(1); false\\\">Warranty Terms\\n                        and Conditions</a> and <a (click)=\\\"lgModal.show();getInforModal(2);false\\\">{{organisation.name}}\\n                        Data Protection Policy</a>.\\n                    </label>\\n                </div>\\n                <div *ngIf=\\\"!isAgreedToTermsAndPolicy && checkingError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    Please read and agree to our Terms, Conditions and Policy.\\n                </div>\\n            </section>\\n            <section>\\n                <div class=\\\"input-group mb-2\\\">\\n                    <button *ngIf=\\\"!isFormPreview\\\" (click)=\\\"submit()\\\" type=\\\"button\\\"\\n                            class=\\\"btn btn-primary form-control\\\">REGISTER\\n                    </button>\\n                    <button *ngIf=\\\"isFormPreview\\\" (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-danger form-control\\\"\\n                            [disabled]=\\\"!isOk() || processing\\\">CONFIRM\\n                    </button>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n</div>\\n\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\"\\n     role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">{{modalTitle}}</h4>\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" [innerHtml]=\\\"modalContent\\\">\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".add-product-text, .remove-product {\\n  cursor: pointer;\\n  display: inherit;\\n  text-align: left;\\n  padding-left: 3px; }\\n\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none; }\\n\\n.preview-label {\\n  flex: 0 0 101px; }\\n\\n.preview-label .input-group-text {\\n  width: 101px; }\\n\\n.preview-text {\\n  display: flex;\\n  align-items: center; }\\n\\n.preview-label .input-group-text {\\n  white-space: normal; }\\n\\n.preview-container {\\n  cursor: pointer; }\\n\\ndiv.input-group ng-select {\\n  width: 100%; }\\n\\n.alert.alert-danger {\\n  text-align: left; }\\n\\na {\\n  color: #0056b3 !important;\\n  cursor: pointer; }\\n\\na:hover {\\n  text-decoration: underline !important; }\\n\\ntable.checkboxes td {\\n  text-align: left !important;\\n  vertical-align: top;\\n  padding-right: 15px; }\\n\\n.form-check {\\n  text-align: left !important;\\n  padding-left: 0px;\\n  display: flex;\\n  align-items: baseline; }\\n\\n.form-check-label {\\n  padding-left: 10px; }\\n\\nagm-map {\\n  height: 300px; }\\n\"","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    NgZone,\n    ViewEncapsulation\n} from '@angular/core';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\nimport {Brand} from \"../../model/brand\";\nimport {ProductService} from \"../../service/product.service\";\nimport {BrandCategory} from \"../../model/brand-category\";\nimport {Product} from \"../../model/product\";\nimport {BrandSubCategory} from \"../../model/brand-sub-category\";\nimport {Dealer} from \"../../model/dealer\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {Customer} from \"../../model/customer\";\nimport {Warranty} from \"../../model/warranty\";\nimport {Router} from \"@angular/router\";\nimport {OrganisationService} from \"../../service/organisation.service\";\nimport {Organisation} from \"../../model/organisation\";\nimport {CustomerService} from '../../service/customer.service';\nimport {Registration} from '../../model/registration';\nimport {RegistrationService} from '../../service/registration.service';\n\nimport {FormControl} from '@angular/forms';\nimport {MapsAPILoader} from '@agm/core';\nimport {CompleterService, CompleterData} from 'ng2-completer';\nimport { NewsletterSubscriptionService } from '../../service/newsletter-subscription.service';\n\nimport {} from 'googlemaps';\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit, AfterViewInit {\n    focusDialingCodeEM = new EventEmitter<boolean>();\n\n    customer: Customer = {id: null, name: null, dialingCode: 65} as Customer;\n    emailConfirm: string;\n    typingEmail: false;\n    typingConfirm: false;\n    isAgreedToTermsAndPolicy = false;\n    processing = false;\n    subscribeNewsletter: boolean;\n\n    warranties: Warranty[] = [];\n\n    isDialingCodeEditing = false;\n\n    previewStates: any = {};\n    isFormPreview = false;\n    checkingError = false;\n    organisation: Organisation = {id: null, name: null, tos: null, dataPolicy: null} as Organisation;\n\n    modalTitle: string;\n    modalContent: string;\n\n    public latitude: number;\n    public longitude: number;\n    public searchControl: FormControl;\n    public zoom: number;\n\n    protected dataDealers: CompleterData;\n\n    @ViewChild(\"search\")\n    public searchElementRef: ElementRef;\n\n    constructor(private productService: ProductService,\n                private organisationService: OrganisationService,\n                private customerService: CustomerService,\n                private registrationService: RegistrationService,\n                private newsletterSubscriptionService: NewsletterSubscriptionService,\n                private router: Router,\n                private mapsAPILoader: MapsAPILoader,\n                private ngZone: NgZone,\n                private completerService: CompleterService) {\n        let warranty: Warranty = new Warranty();\n        warranty.id = null;\n\n        this.warranties.push(warranty);\n        productService.getBrands().subscribe(brands => warranty.brands = brands);\n        productService.getDealers().subscribe(d => {\n            warranty.dealers = d;\n            this.dataDealers = completerService.local(warranty.dealers, 'id', 'name');\n        });\n        organisationService.getOrganisation().subscribe(organisation => this.organisation = organisation);\n    }\n\n    ngOnInit() {\n        this.initMap();\n    }\n\n    ngAfterViewInit() {\n    }\n\n    isPreview(field: string): boolean {\n        if (!this.previewStates.hasOwnProperty(field)) {\n            this.previewStates[field] = true;\n        }\n        return this.previewStates[field] && this.isFormPreview;\n    }\n\n    editPreview(field: string): void {\n        this.previewStates[field] = false;\n    }\n\n    updateField(field: string): void {\n        this.previewStates[field] = true;\n    }\n\n    isEmailValid() {\n        if (this.customer.email == null || this.customer.email.trim() === '') {\n            return true;\n        }\n        return (/^.+\\@.+\\..+$/.test(this.customer.email));\n    }\n\n    isOk() {\n        if (this.customer.name == null || this.customer.name.trim() === '') {\n            return false;\n        }\n        if (!this.customer.telephone) {\n            return false;\n        }\n        if (this.customer.telephone && this.customer.telephone.toString().length != 8) {\n            return false;\n        }\n        if (!this.isEmailValid()) {\n            return false;\n        }\n        if (this.emailConfirm != null) {\n            if (this.emailConfirm.trim() !== this.customer.email.trim()) {\n                return false;\n            }\n        } else {\n            if (this.customer.email != null) {\n                return false;                \n            }\n        }\n        for (let i = 0; i < this.warranties.length; i++) {\n            const warranty = this.warranties[i];\n            if (warranty.selectedBrand == null || warranty.selectedCategory == null || warranty.selectedProduct == null) {\n                return false;\n            }\n            if (warranty.purchaseDate == null) {\n                return false;\n            }\n        }\n        return this.isAgreedToTermsAndPolicy;\n    }\n\n    submit() {\n        if (this.isFormPreview) {\n            this.processing = true;\n            // Confirmed\n            this.customerService.postCustomer(this.customer).subscribe(customer => {\n                let reg = new Registration();\n                reg.customer = customer['@id'];\n                reg['dialingCode'] = customer.dialingCode;\n                reg['email'] = customer.email;\n                reg['homeAddress'] = customer.homeAddress;\n                reg['addressUnitNumber'] = this.customer.addressUnitNumber;\n                reg['homePostalCode'] = customer.homePostalCode;\n                reg['name'] = customer.name;\n                reg['organisation'] = customer.organisation;\n                reg['telephone'] = customer.telephone;\n                reg.submitted = false;\n                reg.warranties = [];\n                for (let w of this.warranties) {\n                    let rw = {customer: reg.customer} as Warranty;\n                    rw.product = w.selectedProduct.id;\n                    rw.purchaseDate = w.purchaseDate;\n                    rw.productSerialNumber = w.productSerialNumber;\n                    if (w.selectedDealer) rw.dealer = w.selectedDealer.id;\n                    reg.warranties.push(rw);\n                }\n\n                if (this.customer.email != null && this.customer.email.trim() != '' && this.subscribeNewsletter) {\n                    this.newsletterSubscriptionService.postNewsletterSubscription(this.customer).subscribe(res => {\n                        console.log('Newsletter subscription successfully!');\n                    })                    \n                }\n\n                this.registrationService.saveRegistration(reg);\n                this.router.navigate(['/survey']);\n            });\n        } else {\n            if (this.isOk()) {\n                this.isFormPreview = true;\n            } else {\n                this.processing = false;\n            }\n            this.checkingError = true;\n        }\n        // this.router.navigate(['/preview', {customer: this.customer, warranties: this.warranties}]);\n    }\n\n    editDialingCode() {\n        this.isDialingCodeEditing = true;\n        this.focusDialingCodeEM.emit(true);\n    }\n\n    updateDialingCode(value: number) {\n        this.customer.dialingCode = value;\n        this.isDialingCodeEditing = false;\n    }\n\n    removeWarranty(w: Warranty) {\n        let index = this.warranties.indexOf(w);\n        if (index > -1) {\n            this.warranties.splice(index, 1);\n            this.warranties = this.warranties;\n        }\n    }\n\n    addWarranty() {\n        let warranty: Warranty = new Warranty();\n        warranty.id = null;\n\n        this.warranties.push(warranty);\n        this.productService.getBrands().subscribe(brands => warranty.brands = brands);\n        this.productService.getDealers().subscribe(d => {\n            warranty.dealers = d;\n            this.dataDealers = this.completerService.local(warranty.dealers, 'id', 'name');\n        });\n    }\n\n    selectBrand(e, warranty: Warranty): void {\n        if (warranty.selectedBrand.id !== null) {\n            warranty.categories = [{id: null, name: 'Loading'} as BrandCategory];\n            warranty.isProductHidden = true;\n            warranty.isCategoryHidden = true;\n\n            this.productService.getCategories(warranty.selectedBrand.id).subscribe(cats => {\n                warranty.categories = cats;\n                warranty.isCategoryHidden = false;\n                warranty.selectedCategory = null;\n            });\n        }\n    }\n\n    selectCategory(e, warranty: Warranty): void {\n        if (warranty.selectedCategory.id !== null) {\n            warranty.products = [{id: null, name: 'Loading'} as Product]\n            warranty.isProductHidden = true;\n\n            this.productService.getProductsByCategory(warranty.selectedCategory.id).subscribe(prods => {\n                warranty.products = prods;\n                warranty.isProductHidden = false;\n                warranty.selectedProduct = null;\n            });\n        }\n    }\n\n    getInforModal(type) {\n        if (type == 1) {\n            this.modalTitle = 'Terms and Conditions';\n            this.modalContent = this.organisation.tos;\n        } else if (type == 2) {\n            this.modalTitle = 'Data Protection Policy';\n            this.modalContent = this.organisation.dataPolicy;\n        }\n    }\n\n\n    initMap() {\n        //set google maps defaults\n        this.zoom = 4;\n        this.latitude = 39.8282;\n        this.longitude = -98.5795;\n\n        //create search FormControl\n        this.searchControl = new FormControl();\n\n        //set current position\n        this.setCurrentPosition();\n\n        //load Places Autocomplete\n        this.mapsAPILoader.load().then(() => {\n            let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n                types: [\"address\"]\n            });\n            autocomplete.addListener(\"place_changed\", () => {\n                this.ngZone.run(() => {\n                    //get the place result\n                    let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n                    //verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n\n                    // get address information\n                    this.customer.homeAddress = place.formatted_address;\n\n                    //set latitude, longitude and zoom\n                    this.latitude = place.geometry.location.lat();\n                    this.longitude = place.geometry.location.lng();\n                    this.zoom = 12;\n                });\n            });\n        });\n    }\n\n    private setCurrentPosition() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.latitude = position.coords.latitude;\n                this.longitude = position.coords.longitude;\n                this.zoom = 12;\n            });\n        }\n    }\n\n    private checkPhone(e: KeyboardEvent) {\n        if (e.key.length == 1 && (e.key.toLowerCase() < '0' || e.key.toLowerCase() > '9')) {\n            return false;\n        }\n        if (this.customer.telephone && e.key.length == 1 && this.customer.telephone.toString().length == 8) {\n            return false;\n        }\n    }\n\n}\n","module.exports = \"<div class=\\\"send-email-wrap\\\">\\n    <div\\n    *ngIf=\\\"!isLoading\\\"\\n    class=\\\"text-center\\\">\\n        <h3>Almost There! Just One More Step:)</h3>\\n        <div\\n        *ngIf=\\\"dataCustomer.email && dataCustomer.email != ''\\\"\\n        class=\\\"email-note\\\">\\n            <p>An email has been sent to <a href=\\\"mailto:{{dataCustomer.email}}\\\">{{dataCustomer.email}}</a> </p>\\n            <p>Please check your email to verify your email address and receive the Registration Confirmation.</p>\\n        </div>\\n        <div\\n        *ngIf=\\\"dataVerify != '' \\\"\\n        class=\\\"note alert alert-success\\\">\\n            {{dataVerify}}\\n        </div>\\n        <div\\n        *ngIf=\\\"verifyFail\\\"\\n        class=\\\"note alert alert-danger\\\">\\n            Error! Pls contact admin to help via <a href=\\\"mailto: peter@magenta-wellness.com\\\">peter@magenta-wellness.com</a>.\\n        </div>\\n        <p\\n        *ngIf=\\\"!isClick\\\"\\n        class=\\\"note\\\">If you have waited for over 30 seconds and have not received an email. Please check your spam or junk mailbox. If it’s still not in there, click <a href=\\\"javascript:;\\\" (click)=\\\"resendEmail($event)\\\">Resend </a></p>\\n        <div class=\\\"text-center cancel-wrap\\\">\\n            <button (click)=\\\"openModal(modalRemoveRegId)\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Cancel</button>\\n        </div>\\n        <ng-template #modalRemoveRegId>\\n            <div class=\\\"modal-body text-center\\\">\\n                <p>Do you really want to redirect to page registration ?</p>\\n                <div class=\\\"cancel-wrap\\\">\\n                    <button (click)=\\\"clearRegistration()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">YES</button>\\n                    <button (click)=\\\"modalRef.hide()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-cancel\\\">NO</button>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </div>\\n    <!-- Loading -->\\n    <div\\n    *ngIf=\\\"isLoading\\\"\\n    class=\\\"text-center\\\">\\n        <div class=\\\"lds-hourglass\\\"></div>\\n    </div>\\n</div>\\n\"","module.exports = \".email-note {\\n  width: 400px;\\n  margin: 0 auto;\\n  border: 1px solid #ddd;\\n  background-color: #eee;\\n  border-radius: 5px;\\n  padding: 20px;\\n  margin-bottom: 30px;\\n  text-align: left; }\\n  .email-note p {\\n    margin-bottom: 0; }\\n  .send-email-wrap .note {\\n  width: 500px;\\n  margin: 0 auto; }\\n  .send-email-wrap h3 {\\n  margin-bottom: 30px; }\\n\"","import {AfterViewInit, Component, ElementRef, EventEmitter, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\nimport {Router} from \"@angular/router\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport {ProductService} from \"../../service/product.service\";\nimport {apiEndPoint, apiEndPointBase, organisationPath} from \"../../../environments/environment\";\n\n@Component({\n    selector: 'send-email',\n    templateUrl: './send-email.component.html',\n    styleUrls: ['./send-email.component.scss']\n})\nexport class SendEmailComponent implements OnInit, AfterViewInit {\n\n    isLoading: boolean = false;\n    dataCustomer : any = [];\n    dataVerify: any = '';\n    verifyFail : boolean = false;\n    isClick : boolean = false;\n\n    modalRef: BsModalRef;\n\n    constructor(private productService: ProductService,\n        private router: Router,\n        private modalService: BsModalService) {\n    }\n\n    ngOnInit() {\n        // 1.\n        this.getDataCustomer();\n    }\n\n    ngAfterViewInit() {\n    }\n\n    /* =========================================== */\n    /** Actions in this Comp */\n\n    // 1. Get Data Customer\n    getDataCustomer() {\n        // let regId = this.router.snapshot.params['id'];\n        this.isLoading = true;\n        if(localStorage.getItem('regId')) {\n            let regId = parseInt(localStorage.getItem('regId'));\n    \n            this.productService.getApiCustomer(regId).subscribe(res => {\n                this.isLoading = false;\n                this.dataCustomer = res;\n            });\n        } else {\n            this.dataCustomer = [];\n            this.isLoading = false;\n        }\n    }\n\n    // 2. Resend Email\n    resendEmail(event: any) {\n        if(localStorage.getItem('regId')) {\n            let regId = parseInt(localStorage.getItem('regId'));\n            let params = {\n                \"registrationId\": regId,\n                \"type\": \"verification\"\n            }\n    \n            this.productService.postVerifyEmail(params)\n            .subscribe(\n                res => {\n                    if(res) {\n                        let resVerify : any = res;\n                        this.dataVerify = resVerify.message;\n\n                        // hide button click\n                        this.isClick = true;\n                    }\n                },\n                error => {\n                    // var details = error.json();\n                    console.log(error);\n                    this.verifyFail = true;\n                    \n                    // hide button click\n                    this.isClick = true;\n                },\n                ()  =>  console.log(\"Finished\")\n            );\n        } else {\n            // this.dataCustomer = [];\n            // this.isLoading = false;\n        }\n    }\n\n    // clear localStorage and then redirect to page registration\n    clearRegistration() {\n        this.modalRef.hide();\n        localStorage.removeItem('regId');\n        this.router.navigate(['/registration']);\n    }\n\n    openModal(template: TemplateRef<any>) {\n        this.modalRef = this.modalService.show(template);\n    }\n}\n","module.exports = \"<div class=\\\"success-wrap\\\">\\n    <div class=\\\"text-center\\\">\\n        <h3>SUCCESSFULLY SUBMITTED</h3>\\n        <p class=\\\"note\\\">If you have specified an email address earlier. A copy of this product registration will be sent to your email for your reference.</p>\\n        <div class=\\\"success-list\\\"\\n        *ngIf=\\\"!isLoading\\\">\\n            <div *ngIf=\\\"prodList.length > 0\\\">\\n                <div\\n                *ngFor=\\\"let warranty of prodList; index as i;\\\"\\n                class=\\\"success-item\\\">\\n                    <p>Warranty Registration ID: {{warranty.number}}</p>\\n                    <p>Date of Registration: {{warranty.purchaseDate | date:'dd MMM yyyy'}}</p>\\n                    <p>Warranty Expiry: {{warranty.expiryDate | date:'dd MMM yyyy'}}</p>\\n                    <p>Product Category: {{warranty.product.category.name}}</p>\\n                    <p>Model Name: {{warranty.product.name}}</p>\\n                    <p>Serial Number: {{warranty.productSerialNumber}}</p>\\n                </div>\\n                <div>\\n                    All hoods have a default motor warranty period of 3 years.\\n                </div>\\n            </div>\\n            <div\\n            *ngIf=\\\"prodList.length == 0\\\"\\n            class=\\\"success-item\\\">\\n                No data\\n            </div>\\n\\n            <div class=\\\"text-center cancel-wrap\\\">\\n                <button (click)=\\\"openModal(modalRemoveRegId)\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Register a new Product </button>\\n            </div>\\n            <ng-template #modalRemoveRegId>\\n                <div class=\\\"modal-body text-center\\\">\\n                    <p>Do you really want to redirect to page registration ?</p>\\n                    <div class=\\\"cancel-wrap\\\">\\n                        <button (click)=\\\"clearRegistration()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">YES</button>\\n                        <button (click)=\\\"modalRef.hide()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-cancel\\\">NO</button>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </div>\\n        <!-- Loading -->\\n        <div\\n        *ngIf=\\\"isLoading\\\"\\n        class=\\\"text-center\\\">\\n            <div class=\\\"lds-hourglass\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".success-list .success-item {\\n  width: 400px;\\n  margin: 0 auto;\\n  margin-bottom: 30px;\\n  border: 1px solid #ddd;\\n  border-radius: 5px;\\n  padding: 10px; }\\n  .success-list .success-item p {\\n    margin-bottom: 0; }\\n  .success-wrap h3 {\\n  margin-bottom: 20px; }\\n  .success-wrap .note {\\n  width: 400px;\\n  margin: 0 auto;\\n  margin-bottom: 15px; }\\n\"","import { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { NgSelectModule, NgOption } from '@ng-select/ng-select';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ProductService } from \"../../service/product.service\";\nimport { apiEndPoint, apiEndPointBase, organisationPath } from \"../../../environments/environment\";\n\n@Component({\n  selector: 'success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.scss']\n})\nexport class SuccessComponent implements OnInit, AfterViewInit {\n\n  prodList: any = [];\n  isLoading: boolean = false;\n\n  modalRef: BsModalRef;\n\n  dataVerify: any = '';\n  verifyFail : boolean = false;\n  isClick : boolean = false;\n\n  constructor(private route: ActivatedRoute, private productService: ProductService,\n    private router: Router,\n    private modalService: BsModalService) {\n  }\n\n  ngOnInit() {\n    let regId = this.route.snapshot.params['id'];\n    localStorage.setItem('regId', regId);\n    // 1.\n    this.getDataWarranties();\n  }\n\n  ngAfterViewInit() {\n    this.sendEmail();\n  }\n\n  /* =========================================== */\n  /** Actions in this Comp */\n\n  // 1. Get Data Warranties\n  getDataWarranties() {\n    this.isLoading = true;\n    if (localStorage.getItem('regId')) {\n      let regId: any = localStorage.getItem('regId');\n      if (Number.isNaN(parseInt(regId))) {\n        let cutstr = '/api/registrations/';\n        console.log('regId', regId, cutstr.length);\n        regId = parseInt(regId.substring(cutstr.length));\n      } else {\n        regId = parseInt(regId);\n      }\n\n      this.productService.getApiWarranties(regId).subscribe(prods => {\n        this.isLoading = false;\n        this.prodList = prods;\n      });\n    } else {\n      this.prodList = [];\n      this.isLoading = false;\n    }\n  }\n\n  // 2. send Email\n  sendEmail() {\n    if (localStorage.getItem('regId')) {\n      let regId = parseInt(localStorage.getItem('regId'));\n      let params = {\n        \"registrationId\": regId,\n        \"type\": \"confirmation\"\n      }\n\n      this.productService.postVerifyEmail(params)\n        .subscribe(\n          res => {\n            if (res) {\n              let resVerify: any = res;\n              this.dataVerify = resVerify.message;\n\n              // hide button click\n              this.isClick = true;\n            }\n          },\n          error => {\n            // var details = error.json();\n            console.log(error);\n            this.verifyFail = true;\n\n            // hide button click\n            this.isClick = true;\n          },\n          () => console.log(\"Finished\")\n        );\n    } else {\n      // this.dataCustomer = [];\n      // this.isLoading = false;\n    }\n  }\n\n  // clear localStorage and then redirect to page registration\n  clearRegistration() {\n    this.modalRef.hide();\n    localStorage.removeItem('regId');\n    this.router.navigate(['/registration']);\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","module.exports = \"<div>\\n  <p [class.red]=\\\"validating && survey.getResultOrErrorCode().errors.indexOf(1) >= 0\\\">Age Group *</p>\\n  <ul class=\\\"option-group\\\">\\n    <li *ngFor=\\\"let option of survey.ageGroup\\\">\\n      <label><input name=\\\"ageGroup\\\" type=\\\"radio\\\" value=\\\"{{option.value}}\\\" [(ngModel)]=\\\"survey.selectedAgeGroup\\\"> {{option.name}}</label>\\n    </li>\\n  </ul>\\n  <p [class.red]=\\\"validating && survey.getResultOrErrorCode().errors.indexOf(2) >= 0\\\">How did you know FUJIOH? (Multiple answers allowed) *</p>\\n  <ul class=\\\"option-group\\\">\\n    <li *ngFor=\\\"let option of survey.hearFrom\\\">\\n      <span>\\n        <label><input name=\\\"hearFrom\\\" type=\\\"checkbox\\\" value=\\\"{{option.value}}\\\" [(ngModel)]=\\\"option.selected\\\"> {{option.name}}</label>\\n      </span>\\n    </li>\\n    <li>\\n      <span>\\n        <label><input type=\\\"hearFrom\\\" type=\\\"checkbox\\\" value=\\\"other\\\" [(ngModel)]=\\\"survey.otherHearFrom.selected\\\"> Others (Enter comment)<br></label>\\n        <div [class.red]=\\\"validating && survey.getResultOrErrorCode().errors.indexOf(3) >= 0\\\">Others (Please write comment if others is selected)</div>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"survey.otherHearFrom.name\\\" (keyup)=\\\"survey.otherHearFrom.selected = true\\\">\\n      </span>\\n    </li>\\n  </ul>\\n  <p [class.red]=\\\"validating && survey.getResultOrErrorCode().errors.indexOf(4) >= 0\\\">Why did you choose FUJIOH product? (Multiple answers allowed) *</p>\\n  <ul class=\\\"option-group\\\">\\n    <li *ngFor=\\\"let option of survey.reason\\\">\\n      <span>\\n        <label><input name=\\\"reason\\\" type=\\\"checkbox\\\" value=\\\"{{option.value}}\\\" [(ngModel)]=\\\"option.selected\\\"> {{option.name}}</label>\\n      </span>\\n    </li>\\n    <li>\\n      <span>\\n        <label><input type=\\\"reason\\\" type=\\\"checkbox\\\" value=\\\"other\\\" [(ngModel)]=\\\"survey.otherReason.selected\\\"> Others (Enter comment)<br></label>\\n        <div [class.red]=\\\"validating && survey.getResultOrErrorCode().errors.indexOf(5) >= 0\\\">Others (Please write comment if others is selected)</div>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"survey.otherReason.name\\\" (keyup)=\\\"survey.otherReason.selected = true\\\">\\n      </span>\\n    </li>\\n  </ul>\\n  <div *ngIf=\\\"validating && !survey.getResult()\\\" class=\\\"red\\\">{{message}}</div>\\n  <button *ngIf=\\\"!submiting\\\" class=\\\"btn btn-success\\\" (click)=\\\"submit()\\\">Next</button>\\n  <button *ngIf=\\\"submiting\\\" class=\\\"btn btn-success\\\" disabled>Submiting...</button>\\n</div>\"","module.exports = \".option-group {\\n  list-style-type: none;\\n  padding: 0px; }\\n\\nlabel {\\n  cursor: pointer; }\\n\\n.red {\\n  color: red; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Survey, Option } from '../../model/survey';\nimport { RegistrationService } from '../../service/registration.service';\nimport { Registration } from '../../model/registration';\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.scss']\n})\nexport class SurveyComponent implements OnInit {\n  survey: Survey = new Survey();\n  registration: Registration\n  message: string;\n  validating: boolean = false;\n  submiting: boolean = false;\n\n  constructor(\n    private router: Router,\n    private registrationService: RegistrationService\n  ) { }\n\n  ngOnInit() {\n    this.registrationService.currentRegistration.subscribe(reg => {\n      if (!reg) {\n        this.router.navigate(['/registration']);\n      }\n    })\n    this.buildOptions();\n  }\n\n  submit() {\n    this.validating = true;\n    var res = this.survey.getResult();\n    if (!res) {\n      this.message = \"Please fill out required field\";\n    } else {\n      // fetch some api\n      this.submiting = true;\n      this.registrationService.currentRegistration.subscribe(reg => {\n        this.registration = reg;\n        this.attachSurvey(res, reg);\n        this.registrationService.postRegistration(reg).subscribe(reg => {\n            localStorage.setItem('regId', reg['@id']);\n            let regId = reg['@id'];\n            let cutstr = '/api/registrations/';\n            console.log('regId', regId, cutstr.length);\n            let regRId = regId.substring(cutstr.length);\n            this.router.navigate([`/upload-receipt-image/${regRId}`]);\n        });\n      });\n    }\n  }\n\n  attachSurvey(survey, reg: Registration) {\n    reg['ageGroup'] = survey.ageGroup;\n    reg['hearOthers'] = survey.hearFrom.other;\n    reg['reasonOthers'] = survey.reason.other;\n    survey.hearFrom.options.forEach(option => {\n        reg[option] = true;\n    });\n    survey.hearFrom.blanks.forEach(option => {\n        reg[option] = false;\n    });\n    survey.reason.options.forEach(option => {\n        reg[option] = true;\n    });\n    survey.reason.blanks.forEach(option => {\n        reg[option] = false;\n    });\n    return reg;\n  }\n\n  buildOptions() {\n    this.survey.ageGroup = [\n      {\n        name: '19 and below',\n        value: '19-and-below',\n        selected: false\n      },\n      {\n        name: '20-29',\n        value: '20-29',\n        selected: false\n      },\n      {\n        name: '30-39',\n        value: '30-39',\n        selected: false\n      },\n      {\n        name: '40-49',\n        value: '40-49',\n        selected: false\n      },\n      {\n        name: '50-59',\n        value: '50-59',\n        selected: false\n      },\n      {\n        name: '60 and above',\n        value: '60-and-above',\n        selected: false\n      }\n    ]\n\n    this.survey.hearFrom = [\n      {\n        name: 'Online search',\n        value: 'hearFromOnlineSearch',\n        selected: false\n      },\n      {\n        name: 'Online advertisement (Facebook/Instagram/etc.)',\n        value: 'hearFromOnlineAd',\n        selected: false\n      },\n      {\n        name: 'Introduced by friend/family',\n        value: 'hearFromFriendFamily',\n        selected: false\n      },\n      {\n        name: 'Introduced by interior designer',\n        value: 'reasonInteriorDesigner',\n        selected: false\n      },\n      {\n        name: 'Walk in to the shop',\n        value: 'hearWalkShop',\n        selected: false\n      }\n    ]\n\n    this.survey.reason = [\n      {\n        name: 'Because there were promotions going on',\n        value: 'reasonPromotions',\n        selected: false\n      },\n      {\n        name: 'Because I liked the brand',\n        value: 'reasonTheBrand',\n        selected: false\n      },\n      {\n        name: 'Because I liked the technology (Suction/Easy cleaning/etc.)',\n        value: 'reasonTechnology',\n        selected: false\n      },\n      {\n        name: 'Because I liked the Japanese quality',\n        value: 'reasonJapanese',\n        selected: false\n      },\n      {\n        name: 'Because I liked the design',\n        value: 'reasonTheDesign',\n        selected: false\n      },\n      {\n        name: 'Because price was affordable',\n        value: 'reasonAffordable',\n        selected: false\n      },\n      {\n        name: 'Because my interior designer suggested to me',\n        value: 'reasonDesignerSuggested',\n        selected: false\n      },\n      {\n        name: 'Because my friend/family suggested to me',\n        value: 'reasonFriendFamilySuggested',\n        selected: false\n      }\n    ]\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 offset-md-1 blk-upload\\\">\\n        <div\\n                *ngIf=\\\"!isLoading\\\"\\n                class=\\\" text-center\\\">\\n            <h3>Upload Receipt</h3>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 col-sm-6 col-xs-12 col-left\\\">\\n                    <div\\n                            *ngIf=\\\"qrCodeImg != ''\\\"\\n                            class=\\\"upload-inner\\\">\\n                        <h5>Scan this QR Code to open this page on your phone</h5>\\n                        <img src={{qrCodeImg}} alt=\\\"\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6 col-12 col-right\\\">\\n                    <div class=\\\"upload-inner \\\">\\n                        <h5> Use this form to upload/ capture pictures from your device </h5>\\n                        <div class=\\\"upload-lst\\\"\\n                             *ngIf=\\\"prodList.length != 0\\\">\\n                            <div\\n                                    *ngFor=\\\"let prod of prodList; index as i;\\\"\\n                                    class=\\\"upload-itm\\\">\\n                                <div class=\\\"inner\\\">\\n                                    <p>Product Category: {{prod.product.name}}</p>\\n                                    <p>Model Name: {{prod.product.modelNumber}}</p>\\n                                    <p>Serial Number: {{prod.productSerialNumber}}</p>\\n                                </div>\\n\\n                                <!--<button type=\\\"button\\\" class=\\\"btn btn-warning form-control\\\">Upload/Take a Picture Now</button>-->\\n\\n                                <!--<image-upload-->\\n                                <!--class=\\\"custome-upload warning d-block d-sm-none\\\"-->\\n                                <!--url=\\\"prod.uploadUrl\\\"-->\\n                                <!--partName=\\\"binaryContent\\\"-->\\n                                <!--[beforeUpload]=\\\"onBeforeUpload\\\"-->\\n                                <!--(removed)=\\\"onRemoved($event)\\\"-->\\n                                <!--(uploadFinished)=\\\"onUploadFinished($event, prod.id)\\\"-->\\n                                <!--(uploadStateChanged)=\\\"onUploadStateChanged($event)\\\"-->\\n                                <!--buttonCaption=\\\"Take a Picture Now\\\"></image-upload>-->\\n\\n                                <image-upload\\n                                        class=\\\"custome-upload\\\"\\n                                        [url]=prod.uploadUrl\\n                                        partName=\\\"binaryContent\\\"\\n                                        [uploadedFiles]=\\\"prod.imageUrl\\\"\\n                                        [beforeUpload]=\\\"onBeforeUpload\\\"\\n                                        (removed)=\\\"onRemoved($event)\\\"\\n                                        (uploadFinished)=\\\"onUploadFinished($event)\\\"\\n                                        (uploadStateChanged)=\\\"onUploadStateChanged($event)\\\"\\n                                        buttonCaption=\\\"Upload a Picture Now\\\"></image-upload>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"upload-lst\\\"\\n                             *ngIf=\\\"prodList.length == 0\\\">\\n                            <h5>No data</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <button (click)=\\\"submitRegistration()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n                        Submit\\n                    </button>\\n\\n                    <button (click)=\\\"openModal(modalRemoveRegId)\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-cancel\\\">Cancel</button>\\n                </div>\\n\\n                <ng-template #modalRemoveRegId>\\n                    <div class=\\\"modal-body text-center\\\">\\n                        <p>Do you really want to redirect to page registration ?</p>\\n                        <div class=\\\"cancel-wrap\\\">\\n                            <button (click)=\\\"clearRegistration()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">YES</button>\\n                            <button (click)=\\\"modalRef.hide()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-cancel\\\">NO</button>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </div>\\n\\n        <!-- Loading -->\\n        <div\\n                *ngIf=\\\"isLoading\\\"\\n                class=\\\"text-center\\\">\\n            <div class=\\\"lds-hourglass\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".blk-upload .col-right .upload-inner {\\n  width: 80%;\\n  margin: 0 auto; }\\n\\n.blk-upload .col-left {\\n  min-height: 349px;\\n  position: relative; }\\n\\n.blk-upload .col-left h5 {\\n    width: 70%;\\n    margin: 0 auto; }\\n\\n.blk-upload .col-left .upload-inner {\\n    position: relative; }\\n\\n.blk-upload .col-left .upload-inner::before {\\n      content: \\\"\\\";\\n      display: block;\\n      width: 1px;\\n      position: absolute;\\n      right: 0;\\n      top: 0;\\n      bottom: 0;\\n      height: 100%;\\n      background-color: #ddd; }\\n\\n.blk-upload .col-left .upload-inner::after {\\n      content: \\\"OR\\\";\\n      display: block;\\n      width: 30px;\\n      height: 30px;\\n      line-height: 30px;\\n      font-size: 13px;\\n      font-weight: bold;\\n      position: absolute;\\n      right: -15px;\\n      top: 50%;\\n      -webkit-transform: translateY(-50%);\\n              transform: translateY(-50%);\\n      background-color: #fff;\\n      border-radius: 50%;\\n      color: #000;\\n      z-index: 2; }\\n\\n.blk-upload {\\n  position: relative; }\\n\\n.blk-upload h3 {\\n    margin-bottom: 20px; }\\n\\n.blk-upload h5 {\\n    margin-bottom: 10px; }\\n\\n.blk-upload img {\\n    width: 180px;\\n    display: block;\\n    margin: 0 auto; }\\n\\n.blk-upload .upload-itm {\\n    margin-bottom: 10px;\\n    padding-bottom: 15px;\\n    border-bottom: 1px dashed #ddd; }\\n\\n.blk-upload .upload-itm:last-child {\\n      border-bottom: none; }\\n\\n.blk-upload .upload-itm p {\\n      margin-bottom: 5px; }\\n\"","import { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { NgSelectModule, NgOption } from '@ng-select/ng-select';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ProductService } from \"../../service/product.service\";\nimport {\n  apiEndPoint,\n  apiEndPointBase,\n  apiEndPointMedia,\n  apiMediaUploadPath,\n  organisationPath,\n  binariesMedia\n} from \"../../../environments/environment\";\n\nimport { ImageUploadModule, FileHolder, UploadMetadata } from \"../../extensions/angular2-image-upload\";\n\nimport { Helper } from \"../../helper/helper\";\nimport { RegistrationService } from \"../../service/registration.service\";\nimport { Customer } from \"../../model/customer\";\n\n@Component({\n  selector: 'uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.scss']\n})\nexport class UploadsComponent implements OnInit, AfterViewInit {\n\n  prodList: any = [];\n  isLoading: boolean = false;\n  qrCodeImg: string = '';\n\n  modalRef: BsModalRef;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private helper: Helper,\n    private regService: RegistrationService,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    // 1.\n    this.getDataWarranties();\n\n    this.qrCodeImg = apiEndPoint + apiEndPointBase + '/qr-code/' + location.protocol + '//' + window.location.hostname + '/upload-receipt-image/' + this.route.snapshot.params['id'] + '.png';\n  }\n\n  ngAfterViewInit() {\n  }\n\n  /* =========================================== */\n  /** Actions in this Comp */\n\n  submitRegistration() {\n    console.log('submitting');\n    let regId = this.route.snapshot.params['id'];\n    this.regService.submitRegistration(regId).subscribe(\n      res => {\n        this.isLoading = false;\n        let c = <Customer>res.customer;\n\n        let email = c.email;\n        if (typeof email !== 'undefined' && email !== null && email !== '') {\n          if (!res.verified) {\n            this.router.navigate(['/send-email/' + regId]);\n          }\n        }\n        this.router.navigate(['/success/' + regId]);\n      },\n      error => {\n        console.log('Error', error);\n      },\n      () => {\n        console.log('Complete Request');\n      }\n    );\n  }\n\n  // 1. Get Data Warranties\n  getDataWarranties() {\n    let regId = this.route.snapshot.params['id'];\n\n    if (!localStorage.getItem('regId')) {\n      localStorage.setItem('regId', regId);\n    }\n\n    this.isLoading = true;\n    // localStorage.setItem('regId', apiEndPointBase + '/registrations/' + regId);\n    // let regId = parseInt(localStorage.getItem('regId'));\n    let apiUploadWarranty = apiEndPointMedia + apiMediaUploadPath;\n    this.productService.getApiWarranties(regId).subscribe(\n      res => {\n        this.isLoading = false;\n        this.prodList = res;\n        for (let prod of this.prodList) {\n          prod.uploadUrl = apiUploadWarranty + '/' + prod.id;\n\n          // create array images\n          prod.imageUrl = [];\n          for (let prodImg of prod.receiptImages) {\n            prod.imageUrl.push(apiEndPointMedia + '/media/' + prodImg.id + binariesMedia);\n          }\n        }\n      },\n      error => {\n        console.log('Error', error);\n        this.prodList = [];\n        this.isLoading = false;\n      },\n      () => {\n        console.log('Complete Request');\n      }\n    );\n  }\n\n  // 2. Event uploads\n  onBeforeUpload = (metadata: UploadMetadata) => {\n    // mutate the file or replace it entirely - metadata.file\n    // console.log('metadata.url', metadata.url);\n    let apiUploadWarranty = apiEndPointMedia + apiMediaUploadPath;\n    let warId = metadata.url.substring(apiUploadWarranty.length + 1);\n    metadata.formData = {\n      \"receiptImageWarranty\": warId,\n      \"context\": \"receipt_image\"\n    };\n\n    // console.log('warid is',warId);\n    metadata.url = apiUploadWarranty;\n    return metadata;\n  };\n\n  onUploadFinished(file: FileHolder) {\n    console.log('finished', file);\n\n    // 1.\n    // this.getDataWarranties();\n  }\n\n  onRemoved(file: FileHolder) {\n    let splitUrlMedia = this.helper.explode('/media/', file.src, undefined);\n    let imgId = this.helper.explode(binariesMedia, splitUrlMedia[1], undefined);\n\n    let v_confirm = false;\n    // check android or ios\n    if (navigator.userAgent.toLowerCase().indexOf(\"android\") > -1\n      || navigator.userAgent.toLowerCase().indexOf(\"ios\") > -1) {\n      v_confirm = true;\n    } else {\n      // not android\n      v_confirm = confirm('Do you really want to remove this image ?');\n      // console.log('removed', file);\n    }\n    // After Asking.\n    if (v_confirm == true) {\n      this.productService.deleteWarrantyImg(parseInt(imgId[0])).subscribe(\n        res => {\n          console.log('res', res);\n        },\n        error => {\n          console.log('Error', error);\n        },\n        () => {\n          console.log('Complete Request');\n        }\n      );\n    }\n\n  }\n\n  onUploadStateChanged(state: boolean) {\n    console.log('state', state);\n  }\n\n  // clear localStorage and then redirect to page registration\n  clearRegistration() {\n    this.modalRef.hide();\n    localStorage.removeItem('regId');\n    this.router.navigate(['/registration']);\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Input, OnInit, Renderer2} from '@angular/core';\n\n@Directive({\n    selector: '[focus]'\n})\nexport class FocusDirective implements OnInit {\n    @Input('focus') focusEvent: EventEmitter<boolean>;\n\n    constructor(private element: ElementRef, private renderer: Renderer2) {\n    }\n\n    ngOnInit() {\n        if (this.focusEvent !== undefined) {\n            this.focusEvent.subscribe(event => {\n                this.element.nativeElement.focus();\n            });\n        }\n    }\n}\n","export { ImageUploadModule } from './lib/image-upload.module';\nexport { ImageUploadComponent, FileHolder } from './lib/image-upload/image-upload.component';\n","\"use strict\";\nvar core_1 = require(\"@angular/core\");\nvar FileDropDirective = (function () {\n    function FileDropDirective() {\n        this.fileOver = new core_1.EventEmitter();\n        this.fileDrop = new core_1.EventEmitter();\n    }\n    FileDropDirective.prototype.onDrop = function (event) {\n        var dataTransfer = FileDropDirective.getDataTransfer(event);\n        if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n            return;\n        }\n        event.preventDefault();\n        var files = this.filterFiles(dataTransfer.files);\n        event.preventDefault();\n        this.fileOver.emit(false);\n        this.fileDrop.emit(files);\n    };\n    FileDropDirective.prototype.onDragLeave = function (event) {\n        this.fileOver.emit(false);\n    };\n    FileDropDirective.prototype.onDragOver = function (event) {\n        var dataTransfer = FileDropDirective.getDataTransfer(event);\n        if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n            return;\n        }\n        dataTransfer.dropEffect = 'copy';\n        event.preventDefault();\n        this.fileOver.emit(true);\n    };\n    FileDropDirective.prototype.filterFiles = function (files) {\n        if (!this.accept || this.accept.length === 0) {\n            return files;\n        }\n        var acceptedFiles = [];\n        for (var i = 0; i < files.length; i++) {\n            for (var j = 0; j < this.accept.length; j++) {\n                if (FileDropDirective.matchRule(this.accept[j], files[i].type)) {\n                    acceptedFiles.push(files[i]);\n                    break;\n                }\n            }\n        }\n        return acceptedFiles;\n    };\n    FileDropDirective.getDataTransfer = function (event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    };\n    FileDropDirective.hasFiles = function (types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        if (types.contains) {\n            return types.contains('Files');\n        }\n        return false;\n    };\n    FileDropDirective.matchRule = function (rule, candidate) {\n        return new RegExp(\"^\" + rule.split(\"*\").join(\".*\") + \"$\").test(candidate);\n    };\n    return FileDropDirective;\n}());\nFileDropDirective.decorators = [\n    { type: core_1.Directive, args: [{\n                selector: '[fileDrop]'\n            },] },\n];\nFileDropDirective.ctorParameters = function () { return []; };\nFileDropDirective.propDecorators = {\n    'accept': [{ type: core_1.Input },],\n    'fileOver': [{ type: core_1.Output },],\n    'fileDrop': [{ type: core_1.Output },],\n    'onDrop': [{ type: core_1.HostListener, args: ['drop', ['$event'],] },],\n    'onDragLeave': [{ type: core_1.HostListener, args: ['dragleave', ['$event'],] },],\n    'onDragOver': [{ type: core_1.HostListener, args: ['dragover', ['$event'],] },],\n};\nexports.FileDropDirective = FileDropDirective;\n","\"use strict\";\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/http\");\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\nvar image_upload_component_1 = require(\"./image-upload/image-upload.component\");\nvar image_service_1 = require(\"./image-upload/image.service\");\nvar ImageUploadModule = (function () {\n    function ImageUploadModule() {\n    }\n    ImageUploadModule.forRoot = function () {\n        return {\n            ngModule: ImageUploadModule,\n            providers: [image_service_1.ImageService]\n        };\n    };\n    return ImageUploadModule;\n}());\nImageUploadModule.decorators = [\n    { type: core_1.NgModule, args: [{\n                imports: [common_1.CommonModule, http_1.HttpModule],\n                declarations: [image_upload_component_1.ImageUploadComponent, file_drop_directive_1.FileDropDirective],\n                exports: [image_upload_component_1.ImageUploadComponent]\n            },] },\n];\nImageUploadModule.ctorParameters = function () { return []; };\nexports.ImageUploadModule = ImageUploadModule;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar core_1 = require(\"@angular/core\");\nvar image_service_1 = require(\"./image.service\");\nvar FileHolder = (function () {\n    function FileHolder(src, file) {\n        this.src = src;\n        this.file = file;\n        this.pending = false;\n    }\n    return FileHolder;\n}());\nexports.FileHolder = FileHolder;\nvar ImageUploadComponent = (function () {\n    function ImageUploadComponent(imageService) {\n        var _this = this;\n        this.imageService = imageService;\n        this.files = [];\n        this.fileCounter = 0;\n        this.fileOver = false;\n        this.showFileTooLargeMessage = false;\n        this.beforeUpload = function (data) { return data; };\n        this.buttonCaption = 'Select Images';\n        this.disabled = false;\n        this.cssClass = 'img-ul';\n        this.clearButtonCaption = 'Clear';\n        this.dropBoxMessage = 'Drop your images here!';\n        this.max = 100;\n        this.preview = true;\n        this.withCredentials = false;\n        this.uploadedFiles = [];\n        this.removed = new core_1.EventEmitter();\n        this.uploadStateChanged = new core_1.EventEmitter();\n        this.uploadFinished = new core_1.EventEmitter();\n        this.previewClicked = new core_1.EventEmitter();\n        this.pendingFilesCounter = 0;\n        this.onFileOver = function (isOver) { return _this.fileOver = isOver; };\n        this.countRemainingSlots = function () { return _this.max - _this.fileCounter; };\n    }\n    ImageUploadComponent.prototype.ngOnInit = function () {\n        if (!this.fileTooLargeMessage) {\n            this.fileTooLargeMessage = 'An image was too large and was not uploaded.' + (this.maxFileSize ? (' The maximum file size is ' + this.maxFileSize / 1024) + 'KiB.' : '');\n        }\n        this.supportedExtensions = this.supportedExtensions ? this.supportedExtensions.map(function (ext) { return 'image/' + ext; }) : ['image/*'];\n    };\n    ImageUploadComponent.prototype.deleteAll = function () {\n        var _this = this;\n        this.files.forEach(function (f) { return _this.removed.emit(f); });\n        this.files = [];\n        this.fileCounter = 0;\n        this.inputElement.nativeElement.value = '';\n    };\n    ImageUploadComponent.prototype.deleteFile = function (file) {\n        var index = this.files.indexOf(file);\n        this.files.splice(index, 1);\n        this.fileCounter--;\n        this.inputElement.nativeElement.value = '';\n        this.removed.emit(file);\n    };\n    ImageUploadComponent.prototype.previewFileClicked = function (file) {\n        this.previewClicked.emit(file);\n    };\n    ImageUploadComponent.prototype.ngOnChanges = function (changes) {\n        if (changes.uploadedFiles && changes.uploadedFiles.currentValue.length > 0) {\n            this.processUploadedFiles();\n        }\n    };\n    ImageUploadComponent.prototype.onFileChange = function (files) {\n        if (this.disabled)\n            return;\n        var remainingSlots = this.countRemainingSlots();\n        var filesToUploadNum = files.length > remainingSlots ? remainingSlots : files.length;\n        if (this.url && filesToUploadNum != 0) {\n            this.uploadStateChanged.emit(true);\n        }\n        this.fileCounter += filesToUploadNum;\n        this.showFileTooLargeMessage = false;\n        this.uploadFiles(files, filesToUploadNum);\n    };\n    ImageUploadComponent.prototype.onResponse = function (response, fileHolder) {\n        fileHolder.serverResponse = { status: response.status, response: response };\n        fileHolder.pending = false;\n        this.uploadFinished.emit(fileHolder);\n        if (--this.pendingFilesCounter == 0) {\n            this.uploadStateChanged.emit(false);\n        }\n    };\n    ImageUploadComponent.prototype.processUploadedFiles = function () {\n        for (var i = 0; i < this.uploadedFiles.length; i++) {\n            var data = this.uploadedFiles[i];\n            var fileBlob = void 0, file = void 0, fileUrl = void 0;\n            if (data instanceof Object) {\n                fileUrl = data.url;\n                fileBlob = (data.blob) ? data.blob : new Blob([data]);\n                file = new File([fileBlob], data.fileName);\n            }\n            else {\n                fileUrl = data;\n                fileBlob = new Blob([fileUrl]);\n                file = new File([fileBlob], fileUrl);\n            }\n            this.files.push(new FileHolder(fileUrl, file));\n        }\n    };\n    ImageUploadComponent.prototype.uploadFiles = function (files, filesToUploadNum) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _loop_1, this_1, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _loop_1 = function (i) {\n                            var file, beforeUploadResult, img, reader;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        file = files[i];\n                                        if (this_1.maxFileSize && file.size > this_1.maxFileSize) {\n                                            this_1.fileCounter--;\n                                            this_1.inputElement.nativeElement.value = '';\n                                            this_1.showFileTooLargeMessage = true;\n                                            return [2 /*return*/, \"continue\"];\n                                        }\n                                        return [4 /*yield*/, this_1.beforeUpload({ file: file, url: this_1.url, abort: false })];\n                                    case 1:\n                                        beforeUploadResult = _a.sent();\n                                        if (beforeUploadResult.abort) {\n                                            this_1.fileCounter--;\n                                            this_1.inputElement.nativeElement.value = '';\n                                            return [2 /*return*/, \"continue\"];\n                                        }\n                                        img = document.createElement('img');\n                                        img.src = window.URL.createObjectURL(beforeUploadResult.file);\n                                        reader = new FileReader();\n                                        reader.addEventListener('load', function (event) {\n                                            var fileHolder = new FileHolder(event.target.result, beforeUploadResult.file);\n                                            _this.uploadSingleFile(fileHolder, beforeUploadResult.url, beforeUploadResult.formData);\n                                            _this.files.push(fileHolder);\n                                        }, false);\n                                        reader.readAsDataURL(beforeUploadResult.file);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < filesToUploadNum)) return [3 /*break*/, 4];\n                        return [5 /*yield**/, _loop_1(i)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ImageUploadComponent.prototype.uploadSingleFile = function (fileHolder, url, customForm) {\n        var _this = this;\n        if (url === void 0) { url = this.url; }\n        if (url) {\n            this.pendingFilesCounter++;\n            fileHolder.pending = true;\n            this.imageService\n                .postImage(url, fileHolder.file, this.headers, this.partName, customForm, this.withCredentials)\n                .subscribe(function (response) { return _this.onResponse(response, fileHolder); }, function (error) {\n                _this.onResponse(error, fileHolder);\n                _this.deleteFile(fileHolder);\n            });\n        }\n        else {\n            this.uploadFinished.emit(fileHolder);\n        }\n    };\n    return ImageUploadComponent;\n}());\nImageUploadComponent.decorators = [\n    { type: core_1.Component, args: [{\n                selector: 'image-upload',\n                template: \"\\n    <div\\n         fileDrop\\n         [accept]=\\\"supportedExtensions\\\"\\n         (fileOver)=\\\"onFileOver($event)\\\"\\n         (fileDrop)=\\\"onFileChange($event)\\\"\\n         [ngClass]=\\\"cssClass\\\"\\n         [ngClass]=\\\"{'img-ul-file-is-over': fileOver}\\\"     \\n         [ngStyle]=\\\"style?.layout\\\"\\n    >\\n      <div class=\\\"img-ul-file-upload img-ul-hr-inline-group\\\">    \\n        <label *ngIf=\\\"fileCounter != max\\\"\\n          class=\\\"img-ul-upload img-ul-button\\\" \\n          [ngStyle]=\\\"style?.selectButton\\\"\\n          [ngClass]=\\\"{'img-ul-disabled': disabled}\\\">\\n          <span [innerText]=\\\"buttonCaption\\\"></span>\\n          <input\\n            type=\\\"file\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [accept]=\\\"supportedExtensions\\\"\\n            multiple (change)=\\\"onFileChange(input.files)\\\"\\n            #input>\\n        </label>\\n        <button *ngIf=\\\"fileCounter > 0\\\"\\n          [disabled]=\\\"disabled\\\"\\n          class=\\\"img-ul-clear img-ul-button\\\" \\n          (click)=\\\"deleteAll()\\\" \\n          [ngStyle]=\\\"style?.clearButton\\\"\\n          [innerText]=\\\"clearButtonCaption\\\">\\n        </button>\\n        <div class=\\\"img-ul-drag-box-msg\\\" [innerText]=\\\"dropBoxMessage\\\"></div>\\n      </div>\\n\\n      <p class=\\\"img-ul-file-too-large\\\" *ngIf=\\\"showFileTooLargeMessage\\\" [innerText]=\\\"fileTooLargeMessage\\\"></p>\\n\\n      <div *ngIf=\\\"preview\\\" class=\\\"img-ul-container img-ul-hr-inline-group\\\" [ngStyle]=\\\"style?.previewPanel\\\">\\n        <div\\n          class=\\\"img-ul-image\\\"\\n          *ngFor=\\\"let file of files\\\"\\n          (click)=\\\"previewFileClicked(file)\\\"\\n          [ngStyle]=\\\"{'background-image': 'url('+ file.src +')'}\\\"\\n        >\\n          <div *ngIf=\\\"file.pending\\\" class=\\\"img-ul-loading-overlay\\\">\\n            <div class=\\\"img-ul-spinning-circle\\\"></div>\\n          </div>\\n          <div *ngIf=\\\"!file.pending && !file.serverResponse\\\" \\n            [ngClass]=\\\"{'img-ul-disabled': disabled}\\\" \\n            class=\\\"img-ul-x-mark\\\" \\n            (click)=\\\"deleteFile(file)\\\">\\n            <span class=\\\"img-ul-close\\\"></span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \",\n                styles: [\"\\n    .img-ul {\\n        --active-color: #3C9;\\n        --common-radius: 3px;\\n        background-color: #f8f8f8;\\n        border-radius: var(--common-radius);\\n        border: #d0d0d0 dashed 1px;\\n        font-family: sans-serif;\\n        position: relative;\\n        color: #9b9b9b;\\n    }\\n\\n    .img-ul-file-is-over {\\n        border: var(--active-color) solid;\\n    }\\n\\n    .img-ul-hr-inline-group:after {\\n        clear: both;\\n        content: \\\"\\\";\\n        display: table;\\n    }\\n\\n    .img-ul-file-upload {    \\n        padding: 16px;\\n    }\\n\\n    .img-ul-drag-box-msg {    \\n        display: inline-block;\\n        font-weight: 600;\\n        margin-left: 12px;\\n        padding-top: 14px;\\n    }\\n\\n    label.img-ul-button input[type=file] {\\n        display: none;\\n        position: fixed;\\n        top: -99999px;\\n    }\\n\\n    .img-ul-clear {\\n        background-color: #FF0000;\\n    }\\n\\n    .img-ul-clear:disabled {\\n        background-color: #FF6464;\\n        cursor: default;\\n    }\\n\\n    .img-ul-upload {\\n        background-color: var(--active-color);\\n    }\\n\\n    .img-ul-button {\\n        -moz-box-shadow: 2px 2px 4px 0 rgba(148, 148, 148, 0.6);\\n        -webkit-box-shadow: 2px 2px 4px 0 rgba(148, 148, 148, 0.6);\\n        border: none;\\n        box-shadow: 2px 2px 4px 0 rgba(148, 148, 148, 0.6);\\n        color: #FFF;\\n        cursor: pointer;\\n        display: inline-block;\\n        float: left;\\n        font-size: 1.25em;\\n        font-weight: 500;\\n        padding: 10px;\\n        text-transform: uppercase;\\n    }\\n\\n    .img-ul-button:active span {\\n        display: block;\\n        position: relative;\\n        top: 1px;\\n    }\\n\\n    .img-ul-container {\\n        background-color: #fdfdfd;\\n        padding: 0 10px;\\n    }\\n\\n    .img-ul-image {    \\n        background: center center no-repeat;\\n        background-size: contain;\\n        display: inline-block;\\n        float: left;\\n        height: 86px;\\n        margin: 6px;\\n        position: relative;\\n        width: 86px;\\n    }\\n\\n    .img-ul-x-mark {\\n        background-color: #000;\\n        border-radius: 2px;\\n        color: #FFF;\\n        cursor: pointer;\\n        float: right;\\n        height: 20px;\\n        margin: 2px;\\n        opacity: .7;\\n        text-align: center;\\n        width: 20px;\\n    }\\n\\n    .img-ul-close {\\n        height: 20px;\\n        opacity: .7;\\n        padding-right: 3px;\\n        position: relative;\\n        width: 20px;\\n    }\\n\\n    .img-ul-x-mark:hover .img-ul-close {\\n        opacity: 1;\\n    }\\n\\n    .img-ul-close:before, .img-ul-close:after {\\n        background-color: #FFF;\\n        border-radius: 2px;\\n        content: '';\\n        height: 15px;\\n        position: absolute;\\n        top: 0;\\n        width: 2px;\\n    }\\n\\n    .img-ul-close:before {\\n        transform: rotate(45deg);\\n    }\\n\\n    .img-ul-close:after {\\n        transform: rotate(-45deg);\\n    }\\n\\n    .img-ul-x-mark.img-ul-disabled {\\n        display: none;\\n    }\\n\\n    .img-ul-loading-overlay {\\n        background-color: #000;\\n        bottom: 0;\\n        left: 0;\\n        opacity: .7;\\n        position: absolute;\\n        right: 0;\\n        top: 0;\\n    }\\n\\n    .img-ul-spinning-circle {\\n        height: 30px;\\n        width: 30px;\\n        margin: auto;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        bottom: 0;\\n        right: 0;\\n        border-radius: 50%;\\n        border: 3px solid rgba(255, 255, 255, 0);\\n        border-top: 3px solid #FFF;\\n        border-right: 3px solid #FFF;\\n        -webkit-animation: spinner 2s infinite cubic-bezier(0.085, 0.625, 0.855, 0.360);\\n        animation: spinner 2s infinite cubic-bezier(0.085, 0.625, 0.855, 0.360);\\n    }\\n\\n    .img-ul-file-too-large {\\n        color: red;\\n        padding: 0 15px;\\n    }\\n\\n    .img-ul-upload.img-ul-disabled {\\n        background-color: #86E9C9;\\n        cursor: default;\\n    }\\n\\n    .img-ul-upload.img-ul-disabled:active span {\\n        top: 0px;\\n    }\\n\\n    @-webkit-keyframes spinner {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n        transform: rotate(0deg);\\n      }\\n\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n        transform: rotate(360deg);\\n      }\\n    }\\n\\n    @keyframes spinner {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n        transform: rotate(0deg);\\n      }\\n\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \"]\n            },] },\n];\nImageUploadComponent.ctorParameters = function () { return [\n    { type: image_service_1.ImageService, },\n]; };\nImageUploadComponent.propDecorators = {\n    'beforeUpload': [{ type: core_1.Input },],\n    'buttonCaption': [{ type: core_1.Input },],\n    'disabled': [{ type: core_1.Input },],\n    'cssClass': [{ type: core_1.Input, args: ['class',] },],\n    'clearButtonCaption': [{ type: core_1.Input },],\n    'dropBoxMessage': [{ type: core_1.Input },],\n    'fileTooLargeMessage': [{ type: core_1.Input },],\n    'headers': [{ type: core_1.Input },],\n    'max': [{ type: core_1.Input },],\n    'maxFileSize': [{ type: core_1.Input },],\n    'preview': [{ type: core_1.Input },],\n    'partName': [{ type: core_1.Input },],\n    'style': [{ type: core_1.Input },],\n    'supportedExtensions': [{ type: core_1.Input, args: ['extensions',] },],\n    'url': [{ type: core_1.Input },],\n    'withCredentials': [{ type: core_1.Input },],\n    'uploadedFiles': [{ type: core_1.Input },],\n    'removed': [{ type: core_1.Output },],\n    'uploadStateChanged': [{ type: core_1.Output },],\n    'uploadFinished': [{ type: core_1.Output },],\n    'previewClicked': [{ type: core_1.Output },],\n    'inputElement': [{ type: core_1.ViewChild, args: ['input',] },],\n};\nexports.ImageUploadComponent = ImageUploadComponent;\n","\"use strict\";\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/http\");\nvar ImageService = (function () {\n    function ImageService(http) {\n        this.http = http;\n    }\n    ImageService.prototype.postImage = function (url, image, headers, partName, customFormData, withCredentials) {\n        if (partName === void 0) { partName = 'image'; }\n        if (!url || url === '') {\n            throw new Error('Url is not set! Please set it before doing queries');\n        }\n        var options = new http_1.RequestOptions();\n        if (withCredentials) {\n            options.withCredentials = withCredentials;\n        }\n        if (headers) {\n            options.headers = new http_1.Headers(headers);\n        }\n        var formData = new FormData();\n        for (var key in customFormData) {\n            formData.append(key, customFormData[key]);\n        }\n        formData.append(partName, image);\n        return this.http.post(url, formData, options);\n    };\n    return ImageService;\n}());\nImageService.decorators = [\n    { type: core_1.Injectable },\n];\nImageService.ctorParameters = function () { return [\n    { type: http_1.Http, },\n]; };\nexports.ImageService = ImageService;\n","import {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class Helper {\n   constructor() {\n\n   }\n\n   explode (delimiter, string, limit) {\n        //  discuss at: http://locutus.io/php/explode/\n        // original by: Kevin van Zonneveld (http://kvz.io)\n        //   example 1: explode(' ', 'Kevin van Zonneveld')\n        //   returns 1: [ 'Kevin', 'van', 'Zonneveld' ]\n    \n        if (arguments.length < 2 ||\n        typeof delimiter === 'undefined' ||\n        typeof string === 'undefined') {\n        return null\n        }\n        if (delimiter === '' ||\n        delimiter === false ||\n        delimiter === null) {\n        return false\n        }\n        if (typeof delimiter === 'function' ||\n        typeof delimiter === 'object' ||\n        typeof string === 'function' ||\n        typeof string === 'object') {\n        return {\n            0: ''\n        }\n        }\n        if (delimiter === true) {\n        delimiter = '1'\n        }\n    \n        // Here we go...\n        delimiter += ''\n        string += ''\n    \n        var s = string.split(delimiter)\n    \n        if (typeof limit === 'undefined') return s\n    \n        // Support for limit\n        if (limit === 0) limit = 1\n    \n        // Positive limit\n        if (limit > 0) {\n        if (limit >= s.length) {\n            return s\n        }\n        return s\n            .slice(0, limit - 1)\n            .concat([s.slice(limit - 1)\n            .join(delimiter)\n            ])\n        }\n    \n        // Negative limit\n        if (-limit >= s.length) {\n        return []\n        }\n    \n        s.splice(s.length + limit)\n        return s\n    }\n}","import { Customer } from './customer';\nimport { Warranty } from './warranty';\n\nexport class Registration {\n  id?: string;\n  customer: Customer|string;\n  warranties: Warranty[];\n  submitted = false;\n  verified: boolean;\n\n}\n","class HearFrom {\n    options: Option[];\n    otherOption: string;\n}\nexport class Survey {\n    ageGroup: Option[];\n    hearFrom: Option[];\n    reason: Option[];\n\n    selectedAgeGroup: string;\n    otherHearFrom: Option = {\n        name: '',\n        value: 'other',\n        selected: false\n    };\n    otherReason: Option = {\n        name: '',\n        value: 'other',\n        selected: false\n    };\n\n    // 1 - Missing age group\n    // 2 - Missing hear from\n    // 3 - Missing other hear from when other is checked\n    // 4 - Missing reason\n    // 5 - Missing other reason when other is checked\n    getResultOrErrorCode() {\n        var errors = [];\n        if (this.otherHearFrom.selected && !this.otherHearFrom.name) {\n            errors.push(3);\n        }\n        if (this.otherReason.selected && !this.otherReason.name) {\n            errors.push(5);\n        }\n        var res = {\n            ageGroup: this.selectedAgeGroup,\n            hearFrom: {\n                options: this.hearFrom ? this.hearFrom.filter(o => o.selected).map(o => o.value) : null,\n                blanks: this.hearFrom ? this.hearFrom.filter(o => !o.selected).map(o => o.value) : null,\n                other: this.otherHearFrom.selected ? this.otherHearFrom.name : ''\n            },\n            reason: {\n                options: this.reason? this.reason.filter(o => o.selected).map(o => o.value) : null,\n                blanks: this.reason? this.reason.filter(o => !o.selected).map(o => o.value) : null,\n                other: this.otherReason.selected ? this.otherReason.name : ''\n            }\n        }\n        if (!res.ageGroup) {\n            errors.push(1);\n        }\n        if (!res.hearFrom.other && res.hearFrom.options.length == 0) {\n            errors.push(2);\n        }\n        if (!res.reason.other && res.reason.options.length == 0) {\n            errors.push(4);\n        }\n        return {\n            res: res,\n            errors: errors\n        };\n    }\n\n    getResult() {\n        var res = this.getResultOrErrorCode();\n        if (res.errors.length > 0) {\n            return false;\n        } else {\n            return res.res;\n        }\n    }\n}\n\nexport class Option {\n    name: string;\n    value: string;\n    selected: boolean;\n}","import {BrandCategory} from \"./brand-category\";\nimport {BrandSubCategory} from \"./brand-sub-category\";\nimport {Product} from \"./product\";\nimport {Dealer} from \"./dealer\";\nimport {Brand} from \"./brand\";\nimport {Customer} from \"./customer\";\n\nexport class Warranty {\n    id: string;\n    name: string;\n    product: Product|string;\n    customer: Customer|string;\n    productSerialNumber: string;\n    purchaseDate: Date;\n    expiryDate: Date;\n    dealer: Dealer | string;\n\n\n    isCategoryHidden = true;\n    isProductHidden = true;\n\n    selectedBrand: Brand = null;\n    selectedCategory: BrandCategory = null;\n    selectedProduct: Product = null;\n    selectedDealer: Dealer = null;\n\n    constructor() {\n        this.brands = [\n            {id: null, name: 'Loading'} as Brand\n        ];\n        this.categories = [\n            {id: null, name: 'Loading'} as BrandCategory\n        ];\n        this.subCategories = [\n            {id: null, name: 'Loading'} as BrandSubCategory\n        ];\n        this.products = [\n            {id: null, name: 'Loading'} as Product\n        ];\n        this.dealers = [\n            {id: null, name: 'Loading'} as Dealer\n        ];\n    }\n\n    brands: Brand[];\n\n    categories: BrandCategory[];\n\n    subCategories: BrandSubCategory[];\n\n    products: Product[];\n\n    dealers: Dealer[];\n}\n","import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\n\nimport {ProductService} from \"./product.service\";\nimport {RegistrationService} from \"./registration.service\";\nimport {Registration} from \"../model/registration\";\nimport {Customer} from \"../model/customer\";\nimport {apiEndPoint, apiEndPointBase} from \"../../environments/environment\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    dataRegistration: any = \"\";\n\n    constructor(public router: Router,\n                private productService: ProductService,\n                private registrationService: RegistrationService\n    ) {\n\n    }\n\n    canActivate() {\n        if (localStorage.getItem('regId')) {\n            this.getDataRegistration();\n            return false;\n        }\n        return true;\n    }\n\n    /* =========================================== */\n    /** Actions in this Comp */\n\n    // 1. Get Data Registration\n    getDataRegistration() {\n        if (localStorage.getItem('regId')) {\n            let regId = localStorage.getItem('regId');\n            if (Number.isNaN(parseInt(regId))) {\n                let cutstr = '/api/registrations/';\n                regId = regId.substring(cutstr.length);\n            }\n\n            this.registrationService.getRegistration(regId).subscribe((res: Registration) => {\n                if (res.submitted === false) {\n                    this.router.navigate(['upload-receipt-image/', parseInt(regId)]);\n                } else {\n                    // check email exists\n                    if (res.customer !== undefined && res && (<Customer>res.customer).email && !res.verified) {\n                        this.router.navigate(['send-email/', parseInt(regId)]);\n                    } else {\n                        this.router.navigate(['success/',parseInt(regId)]);\n                    }\n                }\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Observable, of } from 'rxjs';\nimport { apiEndPoint, apiEndPointBase, organisationPath } from '../../environments/environment';\nimport { Customer } from '../model/customer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/ld+json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  customersUrl = '/customers';\n  customer: Customer;\n\n  constructor(private http: HttpClient) {\n  }\n\n  postCustomer(customer: Customer): Observable<Customer> {\n    delete customer.id;\n    customer.homePostalCode = String(customer.homePostalCode);\n    customer.telephone = String(customer.telephone);\n\n    customer.organisation = `${apiEndPointBase}${organisationPath}/` + localStorage.getItem('orgId');\n    let url = `${apiEndPoint}${apiEndPointBase}${this.customersUrl}`;\n\n    return this.http.post<Customer>(url, customer, httpOptions).pipe(\n      catchError(this.handleError<Customer>('postCustomer'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error('error', error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '../../../node_modules/@angular/common/http';\nimport { Observable, of } from '../../../node_modules/rxjs';\nimport { apiEndPoint, apiEndPointBase } from '../../environments/environment';\nimport { catchError } from '../../../node_modules/rxjs/operators';\nimport { Customer } from '../model/customer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/ld+json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsletterSubscriptionService {\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n  \n  postNewsletterSubscription(customer: Customer): Observable<any> {\n    let url = `${apiEndPoint}${apiEndPointBase}/newsletter-subscriptions`;\n    return this.http.post(url, {\n      customer: customer,\n      name: customer.name,\n      email: customer.email\n    }, httpOptions).pipe(\n      catchError(this.handleError<any>('postNewsletterSubscription'))\n    );\n  }\n  \n  /**\n  * Handle Http operation that failed.\n  * Let the app continue.\n  * @param operation - name of the operation that failed\n  * @param result - optional value to return as the observable result\n  */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      \n      if (operation === 'getRegistration') {\n        localStorage.removeItem('regId');\n      }\n      \n      // TODO: send the error to remote logging infrastructure\n      console.error('error', error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n      \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n  \n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {apiEndPoint, apiEndPointBase, apiEndPointMedia, organisationPath} from \"../../environments/environment\";\n\nimport {Organisation} from \"../model/organisation\";\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/ld+json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService {\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    getOrganisation(): Observable<Organisation> {\n        const orgId = localStorage.getItem('orgId');\n        let url = `${apiEndPoint}${apiEndPointBase}${organisationPath}/${orgId}`;\n        return this.http.get<any>(url).pipe(\n            map((res) => {\n                return res;\n            }),\n            catchError(this.handleError('getOrganisation', []))\n        );\n    }\n\n    getLogo() {\n        const orgId = localStorage.getItem('orgId');\n        let url = `${apiEndPoint}${apiEndPointBase}${organisationPath}/${orgId}`;\n        return this.http.get<Organisation>(url).pipe(\n            map((res) => {\n                //http://dev-swarranty.magentapulse.com/media-api/media/4/binaries/reference/view.json\n                let logoId = res.logo.id;\n                let logoSrc = `${apiEndPointMedia}/media/${logoId}/binaries/reference/view.json`;\n                //http://dev-swarranty.magentapulse.com/media-api/media/4/binaries/reference/view.json\n                return logoSrc;\n            }),\n            catchError(this.handleError('getLogo' +\n                '', []))\n        );\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // TODO: better job of transforming error for user consumption\n            console.log(`${operation} failed: ${error.message}`);\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, } from '@angular/common/http';\n\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {Brand} from \"../model/brand\";\nimport {apiEndPoint, apiEndPointBase, organisationPath, apiEndPointMedia} from \"../../environments/environment\";\nimport {BrandCategory} from \"../model/brand-category\";\nimport {Product} from \"../model/product\";\nimport {Dealer} from \"../model/dealer\";\nimport {Customer} from \"../model/customer\";\nimport {Warranty} from \"../model/warranty\";\n\nimport * as moment from 'moment';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/ld+json'})\n};\n\nconst httpUploadsOptions = {\n    headers: new HttpHeaders({'Content-Type': 'multipart/form-data'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    brandsUrl = '/brands';\n    categoriesUrl = '/brand-categories';\n    productsUrl = '/products';\n    dealersUrl = '/dealers';\n    registrationsUrl = '/registrations';\n    verifyEmailUrl = '/email';\n\n    customer: Customer;\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    getDealers(): Observable<Dealer[]> {\n        const orgId = localStorage.getItem('orgId');\n        let url = `${apiEndPoint}${apiEndPointBase}${organisationPath}/${orgId}${this.dealersUrl}`;\n        return this.http.get<Dealer[]>(url).pipe(\n            map((res) => {\n                let collection = res[\"hydra:member\"];\n                let dealers: Dealer[] = [];\n                for (let item of collection) {\n                    dealers.push({id: item['@id'], name: item['name']} as Dealer);\n                }\n\n                return dealers;\n            }),\n            catchError(this.handleError('getBrands', []))\n        );\n    }\n\n    getBrands(): Observable<Brand[]> {\n        const orgId = localStorage.getItem('orgId');\n        let url = `${apiEndPoint}${apiEndPointBase}${organisationPath}/${orgId}${this.brandsUrl}`;\n        return this.http.get<Brand[]>(url).pipe(\n            map((res) => {\n\n                let collection = res[\"hydra:member\"];\n                let brands: Brand[] = [];\n                for (let item of collection) {\n                    brands.push({id: item['@id'], name: item['name']} as Brand);\n                }\n\n                return brands;\n            }),\n            catchError(this.handleError('getBrands', []))\n        );\n    }\n\n    getCategories(brandId: string) {\n        let url = `${apiEndPoint}${brandId}${this.categoriesUrl}`;\n        return this.http.get<BrandCategory[]>(url).pipe(\n            map((res) => {\n\n                let collection = res[\"hydra:member\"];\n                let cats: BrandCategory[] = [];\n                for (let item of collection) {\n                    cats.push({id: item['@id'], name: item['name']} as BrandCategory);\n                }\n\n                return cats;\n            }),\n            catchError(this.handleError('getBrands', []))\n        );\n    }\n\n    getProductsByCategory(categoryId: string) {\n        let url = `${apiEndPoint}${categoryId}${this.productsUrl}`;\n        return this.http.get<Product[]>(url).pipe(\n            map((res) => {\n\n                let collection = res['hydra:member'];\n                let prods: Product[] = [];\n                for (let item of collection) {\n                    prods.push({id: item['@id'], name: item['name']} as Product);\n                }\n\n                return prods;\n            }),\n            catchError(this.handleError('getProducts', []))\n        );\n    }\n\n    // get warranties\n    getApiWarranties(regId: number) {\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}/${regId}`;\n\n        return this.http.get<any>(url).pipe(\n            map((res) => {\n\n                let collection = res['warranties'];\n                // console.log('collection', collection);\n                let prods: any = [];\n                for (let item of collection) {\n                    prods.push(item);\n                }\n\n                return prods;\n            }),\n            catchError(this.handleError('getWarranties', []))\n        );\n    }\n\n    // get data customer\n    getApiCustomer(regId: number) {\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}/${regId}`;\n\n        return this.http.get<any>(url).pipe(\n            map((res) => {\n\n                let dataCutomer: any = res[\"customer\"];\n\n                return dataCutomer;\n            }),\n            catchError(this.handleError('getCustomer', []))\n        );\n    }\n\n    // get data Registration\n    getApiRegistration(regId: number) {\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}/${regId}`;\n\n        return this.http.get<any>(url).pipe(\n            map((res) => {\n\n                let dataRegistration: any = res;\n                console.log('dataRegistration', dataRegistration);\n                return dataRegistration;\n            }),\n            catchError(this.handleError('getRegistration', []))\n        );\n    }\n\n    // verification email\n    postVerifyEmail(params: any) {\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}${this.verifyEmailUrl}`;\n\n        return this.http.post(url, params, httpOptions).pipe(\n            catchError(this.handleError('postVerify', []))\n        );\n    }\n\n    // delete image\n    deleteWarrantyImg(warId: any) {\n        let url = `${apiEndPointMedia}/media/${warId}.json`;\n        // console.log('warId', warId);\n        return this.http.delete(url, warId).pipe(\n            catchError(this.handleError('deleteImage', []))\n        );\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error('error', error); // log to console instead\n\n            // TODO: better job of transforming error for user consumption\n            console.log(`${operation} failed: ${error.message}`);\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError, map, tap} from 'rxjs/operators';\n\nimport {Observable, of, BehaviorSubject} from 'rxjs';\nimport {Brand} from '../model/brand';\nimport {apiEndPoint, apiEndPointBase, organisationPath} from '../../environments/environment';\nimport {BrandCategory} from '../model/brand-category';\nimport {Product} from '../model/product';\nimport {Dealer} from '../model/dealer';\nimport {Customer} from '../model/customer';\nimport {Warranty} from '../model/warranty';\nimport {Registration} from '../model/registration';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/ld+json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegistrationService {\n    private registrationSource = new BehaviorSubject<Registration>(null);\n    currentRegistration = this.registrationSource.asObservable();\n\n    registrationsUrl = '/registrations';\n    registration: Registration;\n\n    constructor(private http: HttpClient) {\n    }\n\n    saveRegistration(reg: Registration) {\n        this.registrationSource.next(reg);\n    }\n\n    submitRegistration(regId): Observable<Registration> {\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}/${regId}`;\n        return this.http.put<Registration>(url, {'submitted': true} as Registration, httpOptions).pipe(\n            catchError(this.handleError<Registration>('submitRegistration'))\n        );\n    }\n\n    postRegistration(reg: Registration): Observable<Registration> {\n        reg['ageGroup'] = \"18-20\";\n        let url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}`;\n        return this.http.post<Registration>(url, reg, httpOptions).pipe(\n            catchError(this.handleError<Registration>('postRegistration'))\n        );\n    }\n\n    // get data Registration\n    getRegistration(id: string) {\n        let url = null;\n        if (Number.isNaN(parseInt(id))) {\n            url = `${apiEndPoint}${id}`;\n        } else {\n            url = `${apiEndPoint}${apiEndPointBase}${this.registrationsUrl}/${id}`;\n        }\n\n        return this.http.get<Registration>(url).pipe(\n            map((res) => {\n\n                let dataRegistration: Registration = res;\n                console.log('dataRegistration', dataRegistration);\n                return dataRegistration;\n            }),\n            catchError(this.handleError('getRegistration', []))\n        );\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            if (operation === 'getRegistration') {\n                localStorage.removeItem('regId');\n            }\n\n            // TODO: send the error to remote logging infrastructure\n            console.error('error', error); // log to console instead\n            // TODO: better job of transforming error for user consumption\n            console.log(`${operation} failed: ${error.message}`);\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n// export const apiEndPoint = 'http://swarranty.magenta-dev.com';\nexport const apiEndPoint = 'http://dev-swarranty.magentapulse.com';\nexport const apiEndPointBase = '/api';\nexport const organisationPath = '/organisations';\nexport const MEDIA_PREFIX = '/media';\n// export const apiEndPointMedia   = 'http://swarranty.magenta-dev.com';\nexport const apiEndPointMedia   = 'http://dev-swarranty.magentapulse.com/media-api';\nexport const apiMediaUploadPath = '/providers/sonata.media.provider.image/media.json';\nexport const binariesMedia = '/binaries/reference/view.json';\n//export const apiUploadWarranty = 'http://dev-swarranty.magentapulse.com/media-api/providers/sonata.media.provider.image/media.json';\n\n\n\n/**\n * http://127.0.0.1:8000/index.php/api/qr-code/http:%2F%2Fwww.google.com.png\n */\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}