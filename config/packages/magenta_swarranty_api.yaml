lexik_jwt_authentication:
    private_key_path: '%kernel.project_dir%/%env(JWT_PRIVATE_KEY_PATH)%'
    public_key_path: '%kernel.project_dir%/%env(JWT_PUBLIC_KEY_PATH)%'
    pass_phrase: '%env(JWT_PASSPHRASE)%'
    token_ttl:   '%env(JWT_TOKEN_TTL)%'

gesdinet_jwt_refresh_token:
    ttl: 8640000 # 100 days
    ttl_update: true
    firewall: api
    refresh_token_entity: Magenta\Bundle\CBookApiBundle\Entity\JwtRefreshToken

api_platform:
    mapping:
        paths: ['%kernel.project_dir%/src/Entity', '%kernel.project_dir%/config/packages/api_platform/resources.yaml']

    # The title of the API.
    title: 'Smart Warranty API'

    # The description of the API.
    description: 'API for Book Application'

    # The version of the API.
    version: '0.1.0'

    # Specify a name converter to use.
    name_converter: ~

    # Specify a path name generator to use.
    path_segment_name_generator: 'api_platform.path_segment_name_generator.dash'

    swagger:
        api_keys:
            - { name: 'Authorization', type: 'header' }

    # The list of enabled formats. The first one will be the default.
    formats:
        jsonld:
            mime_types: ['application/ld+json']
        jsonhal: ['application/hal+json']
#        xml:     ['application/xml', 'text/xml']
#        json:    ['application/json']
#        yaml:    ['application/x-yaml']
#        csv:     ['text/csv']
#        json:
#            mime_types: ['application/json']
        html:
            mime_types: ['text/html']

        # ...

    # The list of enabled error formats. The first one will be the default.
    error_formats:
        jsonproblem:
            mime_types: ['application/problem+json']
        jsonhal: ['application/hal+json']
        jsonld:
            mime_types: ['application/ld+json']

        # ...


services:
    swarranty.code_search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { code: 'exact' } ]
        tags: [ 'api_platform.filter' ]

    swarranty.brand_search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { brand: 'exact' } ]
        tags: [ 'api_platform.filter' ]

    swarranty.category_search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { category: 'exact' } ]
        tags: [ 'api_platform.filter' ]

    swarranty.sub_category_search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { subCategory: 'exact' } ]
        tags: [ 'api_platform.filter' ]

