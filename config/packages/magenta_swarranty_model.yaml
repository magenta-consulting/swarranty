parameters:
    s3_version: latest
    s3_bucket_name: magenta-consulting
    s3_access_key: '%env(resolve:AWS_S3_ACCESS_KEY)%'
    s3_secret_key: '%env(resolve:AWS_S3_SECRET_KEY)%'
    s3_region: ap-southeast-1
    s3_directory: '%env(resolve:AWS_S3_DIR)%'

doctrine:
    dbal:
        types:
            magenta_json: Magenta\Bundle\SWarrantyModelBundle\Doctrine\Types\JsonType
            json: Sonata\Doctrine\Types\JsonType

    orm:
        entity_managers:
            default:
                mappings:
                    SonataMediaBundle: ~

security:
    encoders:
        Magenta\Bundle\SWarrantyModelBundle\Entity\User\UserInterface: bcrypt

    role_hierarchy:
        ROLE_USER: ROLE_SONATA_ADMIN
        ROLE_ADMIN:       [ROLE_USER]
        ROLE_ALLOWED_TO_SWITCH: ~
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # set access_strategy to unanimous, else you may have unexpected behaviors
    access_decision_manager:
        strategy: unanimous

    providers:
        magenta_user:
            id: magenta_user.user_provider.username



sonata_media:
    default_context: default
    contexts:
        brand_logo:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: 'https://s3-%s3_region%.amazonaws.com/%s3_bucket_name%/%s3_directory%'
            #https://s3-ap-southeast-1.amazonaws.com/magenta-consulting/local/default/0001/01/c5971b853c7c1407ebdb7dd7f0a31bf845aee71e.jpeg
#            path: /upload/media
    providers:
        image:
            filesystem: sonata.media.filesystem.s3

    filesystem:
        local:
            # Directory for uploads should be writable
            directory: "%kernel.project_dir%/public/upload/media"
            create: false
        s3:
            bucket:      '%s3_bucket_name%'
            accessKey:   '%s3_access_key%'
            secretKey:   '%s3_secret_key%'
            region:      '%s3_region%'
            version:     '%s3_version%' # latest by default (cf. https://docs.aws.amazon.com/aws-sdk-php/v3/guide/guide/configuration.html#version)
            sdk_version: 3
#            sdk_version: '%s3_sdk_version%' # 2 by default

            directory:   "%s3_directory%"

            create:         false
            #region:         s3.amazonaws.com # change if not using US Standard region
            storage:        standard # can be one of: standard or reduced
            acl:            private # this no longer works, private by default can be one of: public, private, open, auth_read, owner_read, owner_full_control
#            encryption:     aes256 # can be aes256 or not set
            cache_control:  max-age=86400 # or any other
#            meta:
 #               key1:       value1 #any amount of metas(sent as x-amz-meta-key1 = value1)
    # if you don't use default namespace configuration
    class:
        media: Magenta\Bundle\SWarrantyModelBundle\Entity\Media\Media
        gallery: Magenta\Bundle\SWarrantyModelBundle\Entity\Media\Gallery
        gallery_has_media: Magenta\Bundle\SWarrantyModelBundle\Entity\Media\GalleryHasMedia
    db_driver: doctrine_orm # could be doctrine_orm, doctrine_mongodb or doctrine_phpcr